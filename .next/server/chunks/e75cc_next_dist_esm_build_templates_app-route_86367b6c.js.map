{"version":3,"sources":["turbopack:///[project]/Downloads/mrpii 2/src/app/api/analytics/insights/route.ts","turbopack:///[project]/Downloads/mrpii 2/node_modules/next/dist/esm/build/templates/app-route.js"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { executeQuery } from '../../../../../lib/database/connection';\nimport { generarAlertas, analizarParetoCausas } from '../../../../../lib/oee/calculations';\nimport { getAllProductCosts } from '../../scada/costs-config/route';\n\n// Tipos locais para substituir os inexistentes\ninterface DatosProduccion {\n  unidades_ok: number;\n  unidades_nok: number;\n  unidades_rw: number;\n  tiempo_ciclo_ideal_sec?: number;\n  tiempo_planificado_min?: number;\n  velocidad_nominal?: number;\n}\n\ninterface EventoParada {\n  fecha_inicio: Date;\n  fecha_fin?: Date;\n  duracion_minutos: number;\n  tipo_paro: string;\n  descripcion: string;\n}\n\nexport async function GET(request: NextRequest) {\n  try {\n    console.log('üß† Generando insights simplificados');\n\n    // Obtener datos directamente de la API de m√°quinas que ya funciona\n    const machinesResponse = await fetch('http://localhost:3000/api/scada/machines');\n    const machinesResult = await machinesResponse.json();\n\n    if (!machinesResult.success || !machinesResult.data) {\n      return NextResponse.json({\n        success: false,\n        error: 'No se pudieron obtener datos de las m√°quinas'\n      }, { status: 500 });\n    }\n\n    const machinesData = machinesResult.data;\n\n    // Insights b√°sicos para cada m√°quina\n    const machineInsights = machinesData.map((machineData: any) => {\n      const machine = machineData.machine;\n      const totalProduction = (machine.Rt_Unidades_ok || 0) + (machine.Rt_Unidades_nok || 0) + (machine.Rt_Unidades_rw || 0);\n      const efficiency = totalProduction > 0 ?\n        ((machine.Rt_Unidades_ok || 0) / totalProduction) * 100 : 0;\n\n      const alertas = [];\n\n      // Alerta de parada\n      if (machineData.status === 'INACTIVA') {\n        alertas.push({\n          tipo: 'PARADA',\n          severidad: 'ALTA',\n          mensaje: `M√°quina ${machine.Cod_maquina} est√° inactiva`,\n          recomendacion: 'Verificar y resolver la inactividad'\n        });\n      }\n\n      // Alerta de baja eficiencia\n      if (efficiency < 80 && totalProduction > 10) {\n        alertas.push({\n          tipo: 'EFICIENCIA_BAJA',\n          severidad: 'MEDIA',\n          mensaje: `Eficiencia baja en ${machine.Cod_maquina}: ${efficiency.toFixed(1)}%`,\n          recomendacion: 'Revisar par√°metros de proceso'\n        });\n      }\n\n      return {\n        machine_id: machine.Cod_maquina,\n        machine_name: machine.desc_maquina,\n        estado: machineData.status,\n        eficiencia_calidad: efficiency,\n        progreso_of: machine.Rt_Unidades_planning > 0 ?\n          ((totalProduction / machine.Rt_Unidades_planning) * 100) : 0,\n        alertas,\n        metricas: {\n          ok: machine.Rt_Unidades_ok || 0,\n          nok: machine.Rt_Unidades_nok || 0,\n          rw: machine.Rt_Unidades_rw || 0,\n          total: totalProduction,\n          velocidad_actual: machineData.velocity?.current || 0,\n          velocidad_nominal: machineData.velocity?.nominal || 0\n        }\n      };\n    });\n\n    // Insights a nivel de planta\n    const activeMachines = machinesData.filter((m: any) => m.status === 'PRODUCIENDO');\n    const inactiveMachines = machinesData.filter((m: any) => m.status === 'INACTIVA');\n    const totalProduction = machinesData.reduce((sum: number, m: any) =>\n      sum + (m.machine?.Rt_Unidades_ok || 0) + (m.machine?.Rt_Unidades_nok || 0) + (m.machine?.Rt_Unidades_rw || 0), 0);\n    const totalOK = machinesData.reduce((sum: number, m: any) => sum + (m.machine?.Rt_Unidades_ok || 0), 0);\n\n    const plantInsights = {\n      eficiencia_planta: {\n        maquinas_activas: activeMachines.length,\n        maquinas_inactivas: inactiveMachines.length,\n        utilizacion: machinesData.length > 0 ? (activeMachines.length / machinesData.length) * 100 : 0,\n        produccion_total: totalProduction,\n        eficiencia_calidad_global: totalProduction > 0 ? (totalOK / totalProduction) * 100 : 0\n      },\n      alertas_criticas: inactiveMachines.length,\n      eficiencia_promedio: activeMachines.length > 0 ?\n        activeMachines.reduce((sum: number, m: any) => {\n          const total = (m.machine?.Rt_Unidades_ok || 0) + (m.machine?.Rt_Unidades_nok || 0) + (m.machine?.Rt_Unidades_rw || 0);\n          return sum + (total > 0 ? ((m.machine?.Rt_Unidades_ok || 0) / total) * 100 : 0);\n        }, 0) / activeMachines.length : 0\n    };\n\n    return NextResponse.json({\n      success: true,\n      data: {\n        timestamp: new Date().toISOString(),\n        turno: 'ACTUAL',\n        insights_maquinas: machineInsights,\n        insights_planta: plantInsights,\n        acciones_recomendadas: inactiveMachines.length > 0 ? [{\n          prioridad: 'CRITICA',\n          categoria: 'INACTIVIDAD',\n          descripcion: `${inactiveMachines.length} m√°quinas inactivas`,\n          accion: 'Resolver inactividad de m√°quinas',\n          impacto: 'Alto - afecta producci√≥n total'\n        }] : [],\n        resumen: {\n          total_maquinas: machinesData.length,\n          maquinas_activas: activeMachines.length,\n          maquinas_inactivas: inactiveMachines.length,\n          total_alertas: machineInsights.reduce((sum: number, m: any) => sum + m.alertas.length, 0),\n          eficiencia_promedio_planta: plantInsights.eficiencia_promedio\n        }\n      }\n    });\n\n  } catch (error) {\n    console.error('‚ùå Error generando insights:', error);\n    return NextResponse.json({\n      success: false,\n      error: 'Error al generar insights',\n      message: error instanceof Error ? error.message : 'Error desconocido'\n    }, { status: 500 });\n  }\n}\n\nasync function getCurrentMachinesData() {\n  const sql = `\n    SELECT\n      cm.id_maquina,\n      cm.Cod_maquina,\n      cm.desc_maquina,\n      cm.Rt_Cod_of,\n      cm.rt_Cod_producto,\n      cm.Rt_Desc_producto,\n      cm.Rt_Unidades_planning,\n      cm.Rt_Unidades_ok,\n      cm.Rt_Unidades_nok,\n      cm.Rt_Unidades_rw,\n      cm.f_velocidad as velocidad_actual,\n      cm.Rt_Rendimientonominal1 as velocidad_nominal,\n      cm.rt_desc_turno as turno_actual,\n      cm.rt_desc_paro,\n      cm.rt_id_paro,\n      cm.Rt_Desc_operario as operario_actual,\n      -- Estado inferido\n      CASE\n        WHEN cm.rt_id_paro IS NOT NULL AND cm.rt_id_paro > 0 THEN 'PARADA'\n        WHEN cm.Rt_Cod_of IS NOT NULL AND cm.Rt_Cod_of != '--' AND cm.f_velocidad > 0 THEN 'RUN'\n        WHEN cm.Rt_Cod_of IS NOT NULL AND cm.Rt_Cod_of != '--' THEN 'IDLE'\n        ELSE 'STOPPED'\n      END as estado_actual,\n      -- Tiempo ciclo ideal (buscar en configuraci√≥n de producto)\n      ISNULL(cp.tiempo_ciclo_ideal_sec, 30) as tiempo_ciclo_ideal_sec,\n      -- Metas de OEE\n      ISNULL(cm.meta_disponibilidad, 0.85) as meta_disponibilidad,\n      ISNULL(cm.meta_rendimiento, 0.80) as meta_rendimiento,\n      ISNULL(cm.meta_calidad, 0.95) as meta_calidad,\n      ISNULL(cm.meta_oee, 0.65) as meta_oee\n    FROM cfg_maquina cm\n    LEFT JOIN cfg_producto cp ON cm.rt_Cod_producto = cp.cod_producto\n    WHERE cm.activo = 1\n      AND cm.Cod_maquina != '--'\n    ORDER BY cm.Cod_maquina\n  `;\n\n  try {\n    return await executeQuery(sql, undefined, 'mapex');\n  } catch (error) {\n    console.warn('‚ö†Ô∏è Error al obtener datos de productos - retornando datos vac√≠os');\n    return [];\n  }\n}\n\nasync function generateMachineInsights(machine: any) {\n  // Obtener paradas del turno actual\n  const downtimeEvents = await getMachineDowntimeEvents(machine.id_maquina);\n\n  // Obtener datos de producci√≥n del turno\n  const productionData: DatosProduccion = {\n    unidades_ok: machine.Rt_Unidades_ok || 0,\n    unidades_nok: machine.Rt_Unidades_nok || 0,\n    unidades_rw: machine.Rt_Unidades_rw || 0,\n    tiempo_ciclo_ideal_sec: machine.tiempo_ciclo_ideal_sec,\n    tiempo_planificado_min: 480, // 8 horas de turno\n    velocidad_nominal: machine.velocidad_nominal || 100\n  };\n\n  // Obtener costos de productos desde MAPEX\n  const productCosts = await getAllProductCosts();\n  const costoPromedioProducto = Object.keys(productCosts).length > 0\n    ? Object.values(productCosts).reduce((sum, cost) => sum + cost, 0) / Object.keys(productCosts).length\n    : 15.50; // Fallback al valor por defecto\n\n  console.log('üí∞ Costo promedio para insights:', {\n    totalProductos: Object.keys(productCosts).length,\n    costoPromedio: costoPromedioProducto,\n    nota: 'Usado para calcular impacto econ√≥mico de mejoras OEE'\n  });\n\n  // Calcular OEE actual (estimaci√≥n local con datos disponibles)\n  const resultadoOEE = computeOEEFromSnapshot(productionData, downtimeEvents, {\n    velocidad_actual: machine.velocidad_actual || 0,\n    velocidad_nominal: machine.velocidad_nominal || 0,\n    tiempo_planificado_min: 480\n  });\n\n  // Generar alertas\n  const alertas = await generarAlertas(machine.Cod_maquina);\n\n  // Calcular ETA si hay OF activa\n  let eta = null;\n  if (machine.Rt_Cod_of && machine.Rt_Cod_of !== '--' && machine.Rt_Unidades_planning > 0) {\n    const unidades_faltantes = machine.Rt_Unidades_planning - (productionData.unidades_ok + productionData.unidades_nok + productionData.unidades_rw);\n    const velocidad_promedio = machine.velocidad_actual || 0;\n    if (unidades_faltantes > 0 && velocidad_promedio > 0) {\n      const horas_restantes = unidades_faltantes / velocidad_promedio;\n      eta = new Date(Date.now() + horas_restantes * 60 * 60 * 1000);\n    }\n  }\n\n  // An√°lisis de rendimiento vs hist√≥rico\n  const performanceAnalysis = await analyzePerformanceVsHistorical(machine.id_maquina);\n\n  // Detecci√≥n de patrones an√≥malos\n  const anomalies = await detectAnomalies(machine);\n\n  return {\n    estado: machine.estado_actual,\n    oee_actual: resultadoOEE,\n    alertas,\n    eta_of: eta,\n    analisis_rendimiento: performanceAnalysis,\n    anomalias: anomalies,\n    recomendaciones: generateMachineRecommendations(machine, resultadoOEE, alertas),\n    metricas_turno: {\n      progreso_of: machine.Rt_Unidades_planning > 0 ?\n        ((productionData.unidades_ok + productionData.unidades_nok + productionData.unidades_rw) / machine.Rt_Unidades_planning) * 100 : 0,\n      eficiencia_calidad: productionData.unidades_ok + productionData.unidades_nok + productionData.unidades_rw > 0 ?\n        (productionData.unidades_ok / (productionData.unidades_ok + productionData.unidades_nok + productionData.unidades_rw)) * 100 : 0,\n      velocidad_vs_nominal: machine.velocidad_nominal > 0 ? (machine.velocidad_actual / machine.velocidad_nominal) * 100 : 0\n    }\n  };\n}\nfunction computeOEEFromSnapshot(prod: DatosProduccion, downtimeEvents: any[], ctx: { velocidad_actual: number; velocidad_nominal: number; tiempo_planificado_min: number; }) {\n  const total = (prod.unidades_ok || 0) + (prod.unidades_nok || 0) + (prod.unidades_rw || 0);\n  const calidad = total > 0 ? (prod.unidades_ok / total) : 0;\n  const disponibilidad = ctx.tiempo_planificado_min > 0 ? Math.max(0, Math.min(1, 1 - (downtimeEvents.reduce((s, e) => s + (e.duracion_sec || 0), 0) / 60) / ctx.tiempo_planificado_min)) : 0;\n  const rendimiento = ctx.velocidad_nominal > 0 ? Math.max(0, Math.min(1, ctx.velocidad_actual / ctx.velocidad_nominal)) : 0;\n  const oee = disponibilidad * rendimiento * calidad;\n  return { oee, rendimiento, disponibilidad, calidad };\n}\n\nasync function getMachineDowntimeEvents(machineId: number): Promise<any[]> {\n  const sql = `\n    SELECT\n      hpp.duracion_minutos * 60 as duracion_sec,\n      hpp.tipo_paro as tipo,\n      hpp.desc_paro as causa,\n      CASE WHEN cp.es_planificado = 1 THEN 1 ELSE 0 END as es_planificada,\n      hpp.fecha_inicio as hora_inicio,\n      hpp.fecha_fin as hora_fin\n    FROM his_prod_paro hpp\n    LEFT JOIN cfg_paro cp ON hpp.id_tipo_paro = cp.id_paro\n    WHERE hpp.id_maquina = ${machineId}\n      AND hpp.fecha_inicio >= CAST(GETDATE() AS DATE) -- Solo hoy\n    ORDER BY hpp.fecha_inicio DESC\n  `;\n\n  const results = await executeQuery(sql);\n\n  return results.map(row => ({\n    duracion_sec: row.duracion_sec || 0,\n    tipo: row.tipo || 'DESCONOCIDO',\n    causa: row.causa,\n    es_planificada: row.es_planificada === 1,\n    hora_inicio: new Date(row.hora_inicio),\n    hora_fin: row.hora_fin ? new Date(row.hora_fin) : undefined\n  }));\n}\n\nasync function analyzePerformanceVsHistorical(machineId: number) {\n  const sql = `\n    SELECT\n      AVG(CAST(oee AS FLOAT)) as oee_promedio_7d,\n      AVG(CAST(disponibilidad AS FLOAT)) as disponibilidad_promedio_7d,\n      AVG(CAST(rendimiento AS FLOAT)) as rendimiento_promedio_7d,\n      AVG(CAST(calidad AS FLOAT)) as calidad_promedio_7d,\n      COUNT(*) as mediciones\n    FROM his_horaOEE\n    WHERE id_maquina = ${machineId}\n      AND fecha >= DATEADD(day, -7, GETDATE())\n  `;\n\n  const historical = await executeQuery(sql);\n  return historical[0] || {};\n}\n\nasync function detectAnomalies(machine: any) {\n  const anomalies = [];\n\n  // Anomal√≠a: Velocidad muy baja comparada con nominal\n  if (machine.velocidad_actual > 0 && machine.velocidad_nominal > 0) {\n    const velocityRatio = machine.velocidad_actual / machine.velocidad_nominal;\n    if (velocityRatio < 0.5) {\n      anomalies.push({\n        tipo: 'VELOCIDAD_ANOMALA',\n        severidad: 'ALTA',\n        descripcion: `Velocidad actual (${machine.velocidad_actual}) muy por debajo de la nominal (${machine.velocidad_nominal})`,\n        valor_actual: machine.velocidad_actual,\n        valor_esperado: machine.velocidad_nominal\n      });\n    }\n  }\n\n  // Anomal√≠a: Alto ratio de NOK\n  const totalProduced = (machine.Rt_Unidades_ok || 0) + (machine.Rt_Unidades_nok || 0) + (machine.Rt_Unidades_rw || 0);\n  if (totalProduced > 10) {\n    const nokRatio = (machine.Rt_Unidades_nok || 0) / totalProduced;\n    if (nokRatio > 0.10) { // M√°s del 10% NOK\n      anomalies.push({\n        tipo: 'CALIDAD_ANOMALA',\n        severidad: nokRatio > 0.20 ? 'CRITICA' : 'ALTA',\n        descripcion: `Ratio de piezas NOK elevado: ${(nokRatio * 100).toFixed(1)}%`,\n        valor_actual: nokRatio * 100,\n        valor_esperado: 5\n      });\n    }\n  }\n\n  return anomalies;\n}\n\nfunction generateMachineRecommendations(machine: any, oeeResult: any, alertas: any[]) {\n  const recommendations = [];\n\n  // Recomendaci√≥n basada en disponibilidad\n  if (oeeResult.disponibilidad < 0.80) {\n    recommendations.push({\n      categoria: 'DISPONIBILIDAD',\n      prioridad: 'ALTA',\n      accion: 'Reducir tiempo de paradas no planificadas',\n      detalle: `Tiempo perdido: ${Math.round(oeeResult.tiempo_paradas_no_planificadas_sec / 60)} minutos`,\n      impacto_estimado: `+${((0.85 - oeeResult.disponibilidad) * 8 * 120).toFixed(0)} piezas/turno`\n    });\n  }\n\n  // Recomendaci√≥n basada en rendimiento\n  if (oeeResult.rendimiento < 0.75) {\n    recommendations.push({\n      categoria: 'RENDIMIENTO',\n      prioridad: 'MEDIA',\n      accion: 'Optimizar velocidad de m√°quina',\n      detalle: 'Verificar par√°metros de proceso y eliminar microparadas',\n      impacto_estimado: `+${((0.80 - oeeResult.rendimiento) * 480 * 2).toFixed(0)} piezas/turno`\n    });\n  }\n\n  // Recomendaci√≥n basada en calidad\n  if (oeeResult.calidad < 0.90) {\n    recommendations.push({\n      categoria: 'CALIDAD',\n      prioridad: 'ALTA',\n      accion: 'Revisar par√°metros de calidad',\n      detalle: 'Calibrar equipos y verificar materias primas',\n      impacto_estimado: `Ahorro: ‚Ç¨${((1 - oeeResult.calidad) * 100 * 15.5).toFixed(2)}/turno`\n    });\n  }\n\n  return recommendations;\n}\n\nasync function generatePlantInsights(machinesData: any[]) {\n  const activesMachines = machinesData.filter(m => ['RUN', 'IDLE', 'SETUP'].includes(m.estado_actual));\n  const runningMachines = machinesData.filter(m => m.estado_actual === 'RUN');\n\n  // OEE ponderado de m√°quinas activas\n  const totalProduction = activesMachines.reduce((sum, m) =>\n    sum + (m.Rt_Unidades_ok || 0) + (m.Rt_Unidades_nok || 0) + (m.Rt_Unidades_rw || 0), 0);\n\n  return {\n    eficiencia_planta: {\n      maquinas_activas: activesMachines.length,\n      maquinas_produciendo: runningMachines.length,\n      utilizacion: machinesData.length > 0 ? (activesMachines.length / machinesData.length) * 100 : 0,\n      produccion_total_turno: totalProduction\n    },\n    cuello_botella: identifyBottleneck(activesMachines),\n    oportunidades_mejora: identifyImprovementOpportunities(machinesData),\n    balance_linea: analyzeLineBalance(activesMachines)\n  };\n}\n\nfunction identifyBottleneck(machines: any[]) {\n  // Identificar m√°quina con menor velocidad relativa\n  const machinesWithVelocity = machines.filter(m => m.velocidad_actual > 0 && m.velocidad_nominal > 0);\n\n  if (machinesWithVelocity.length === 0) return null;\n\n  const bottleneck = machinesWithVelocity.reduce((min, machine) => {\n    const ratio = machine.velocidad_actual / machine.velocidad_nominal;\n    const minRatio = min.velocidad_actual / min.velocidad_nominal;\n    return ratio < minRatio ? machine : min;\n  });\n\n  return {\n    maquina: bottleneck.Cod_maquina,\n    velocidad_relativa: ((bottleneck.velocidad_actual / bottleneck.velocidad_nominal) * 100).toFixed(1),\n    impacto_estimado: 'Limita capacidad de toda la l√≠nea'\n  };\n}\n\nfunction identifyImprovementOpportunities(machines: any[]) {\n  const opportunities = [];\n\n  // Oportunidad: M√°quinas paradas con OF pendiente\n  const stoppedWithWork = machines.filter(m =>\n    m.estado_actual === 'PARADA' && m.Rt_Cod_of && m.Rt_Cod_of !== '--'\n  );\n\n  if (stoppedWithWork.length > 0) {\n    opportunities.push({\n      tipo: 'REACTIVACION_RAPIDA',\n      maquinas_afectadas: stoppedWithWork.length,\n      impacto: 'ALTO',\n      descripcion: `${stoppedWithWork.length} m√°quinas paradas con OF pendiente`,\n      accion: 'Priorizar reanudaci√≥n de estas m√°quinas'\n    });\n  }\n\n  // Oportunidad: Desbalance de carga\n  const loadImbalance = calculateLoadImbalance(machines);\n  if (loadImbalance.coefficient > 0.3) {\n    opportunities.push({\n      tipo: 'BALANCE_CARGA',\n      impacto: 'MEDIO',\n      descripcion: 'Distribuci√≥n desigual de carga entre m√°quinas',\n      accion: 'Redistribuir √≥rdenes de fabricaci√≥n',\n      coeficiente_variacion: loadImbalance.coefficient\n    });\n  }\n\n  return opportunities;\n}\n\nfunction calculateLoadImbalance(machines: any[]) {\n  const loads = machines.map(m =>\n    (m.Rt_Unidades_ok || 0) + (m.Rt_Unidades_nok || 0) + (m.Rt_Unidades_rw || 0)\n  );\n\n  const mean = loads.reduce((sum, load) => sum + load, 0) / loads.length;\n  const variance = loads.reduce((sum, load) => sum + Math.pow(load - mean, 2), 0) / loads.length;\n  const stdDev = Math.sqrt(variance);\n\n  return {\n    coefficient: mean > 0 ? stdDev / mean : 0,\n    mean_load: mean,\n    std_deviation: stdDev\n  };\n}\n\nfunction analyzeLineBalance(machines: any[]) {\n  if (machines.length === 0) return null;\n\n  const velocities = machines\n    .filter(m => m.velocidad_actual > 0)\n    .map(m => m.velocidad_actual);\n\n  if (velocities.length === 0) return null;\n\n  const minVelocity = Math.min(...velocities);\n  const maxVelocity = Math.max(...velocities);\n  const avgVelocity = velocities.reduce((sum, v) => sum + v, 0) / velocities.length;\n\n  return {\n    velocidad_minima: minVelocity,\n    velocidad_maxima: maxVelocity,\n    velocidad_promedio: avgVelocity,\n    desbalance_porcentaje: maxVelocity > 0 ? ((maxVelocity - minVelocity) / maxVelocity) * 100 : 0,\n    estado: maxVelocity > 0 && ((maxVelocity - minVelocity) / maxVelocity) < 0.1 ? 'BALANCEADO' : 'DESBALANCEADO'\n  };\n}\n\nasync function generateActionableInsights(machinesData: any[]) {\n  const actions = [];\n\n  // Acciones para m√°quinas con alertas cr√≠ticas\n  const criticalMachines = machinesData.filter(m =>\n    m.estado_actual === 'PARADA' ||\n    (m.Rt_Unidades_nok || 0) / ((m.Rt_Unidades_ok || 0) + (m.Rt_Unidades_nok || 0) + 1) > 0.15\n  );\n\n  for (const machine of criticalMachines) {\n    if (machine.estado_actual === 'PARADA') {\n      actions.push({\n        maquina: machine.Cod_maquina,\n        prioridad: 'CRITICA',\n        categoria: 'PARADA_PROLONGADA',\n        accion: 'Investigar y resolver parada inmediatamente',\n        tiempo_estimado: '15-30 min',\n        responsable: 'T√©cnico de turno'\n      });\n    }\n  }\n\n  return actions;\n}\n\nasync function calculateConsolidatedKPIs(machinesData: any[]) {\n  const activeMachines = machinesData.filter(m => ['RUN', 'IDLE', 'SETUP'].includes(m.estado_actual));\n  const totalProduction = machinesData.reduce((sum, m) =>\n    sum + (m.Rt_Unidades_ok || 0) + (m.Rt_Unidades_nok || 0) + (m.Rt_Unidades_rw || 0), 0);\n  const totalOK = machinesData.reduce((sum, m) => sum + (m.Rt_Unidades_ok || 0), 0);\n\n  return {\n    utilizacion_planta: machinesData.length > 0 ? (activeMachines.length / machinesData.length) * 100 : 0,\n    produccion_total: totalProduction,\n    eficiencia_calidad_global: totalProduction > 0 ? (totalOK / totalProduction) * 100 : 0,\n    maquinas_criticas: machinesData.filter(m => m.estado_actual === 'PARADA').length,\n    velocidad_promedio_planta: activeMachines.length > 0 ?\n      activeMachines.reduce((sum, m) => sum + (m.velocidad_actual || 0), 0) / activeMachines.length : 0\n  };\n}","import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/analytics/insights/route\",\n        pathname: \"/api/analytics/insights\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/Downloads/mrpii 2/src/app/api/analytics/insights/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/analytics/insights/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!getRequestMeta(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!getRequestMeta(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n"],"names":[],"mappings":"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","ignoreList":[1]}