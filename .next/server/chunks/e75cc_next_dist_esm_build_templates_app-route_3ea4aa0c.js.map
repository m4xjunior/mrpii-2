{"version":3,"sources":["turbopack:///[project]/Downloads/mrpii 2/src/app/api/scada/machines/route.ts","turbopack:///[project]/Downloads/mrpii 2/lib/data-processor.ts","turbopack:///[project]/Downloads/mrpii 2/node_modules/next/dist/esm/build/templates/app-route.js"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { MachineStatus } from '../../../../../types/machine';\nimport { getMachinesStatus } from '../../../../../lib/data-processor';\n\nexport async function GET(request: NextRequest) {\n  try {\n    console.log('üîç Iniciando busca de m√°quinas (pipeline consolidado)...');\n    const machineStatuses: MachineStatus[] = await getMachinesStatus();\n\n    return NextResponse.json({\n      success: true,\n      data: machineStatuses,\n      count: machineStatuses.length,\n      timestamp: new Date().toISOString()\n    });\n\n  } catch (error) {\n    console.error('‚ùå Erro ao buscar m√°quinas:', error);\n\n    return NextResponse.json({\n      success: false,\n      error: 'Erro ao conectar com banco de dados',\n      message: error instanceof Error ? error.message : 'Erro desconhecido',\n      timestamp: new Date().toISOString()\n    }, { status: 500 });\n  }\n}","import { executeQuery } from './database/connection';\nimport { calculateOEEForOF, calculateOEEForTurno, getProductionDataForOF } from './oee/calculations';\nimport { Machine, MachineStatus as IMachineStatus, OEEData } from '../types/machine';\n\n// Interface para dados de produ√ß√£o por OF\ninterface ProductionOFData {\n  ok: number;\n  nok: number;\n  rw: number;\n  total: number;\n  progress: number;\n  remainingPieces: number;\n  remainingTime: string;\n  startDate?: string;\n  estimatedFinish?: string;\n}\n\n// Interface para dados de velocidade\ninterface VelocityData {\n  current: number;\n  nominal: number;\n  ratio: number;\n}\n\n// Interface para dados do produto\ninterface ProductData {\n  code: string;\n  description: string;\n}\n\n// Interface para dados da ordem\ninterface OrderData {\n  code: string;\n  date?: string;\n  shift: string;\n}\n\nexport async function getMachinesStatus(): Promise<IMachineStatus[]> {\n  try {\n    console.log('üîÑ Iniciando obten√ß√£o de status das m√°quinas...');\n\n    // Consulta principal para obter dados das m√°quinas (equivalente ao PHP)\n    const sqlMachines = `\n      SELECT \n        Cod_maquina, desc_maquina, Rt_Cod_of, rt_Cod_producto, rt_id_actividad, \n        rt_id_paro, id_maquina, Rt_Desc_producto, Rt_Unidades_planning, \n        Rt_Desc_actividad, Rt_Desc_operario, Rt_Unidades_ok, Rt_Unidades_nok, \n        f_velocidad, Rt_Rendimientonominal1, rt_desc_paro,\n        COALESCE((SELECT cod_producto FROM cfg_producto WHERE id_producto = rt_id_producto), '') as codigo_producto,\n        rt_dia_productivo, rt_desc_turno\n      FROM cfg_maquina\n      WHERE activo = 1 AND Cod_maquina <> '--'\n    `;\n\n    const machinesData = await executeQuery<any>(sqlMachines, undefined, 'mapex');\n    \n    if (!machinesData || machinesData.length === 0) {\n      console.log('‚ö†Ô∏è Nenhuma m√°quina encontrada na consulta principal');\n      return [];\n    }\n\n    console.log(`‚úÖ ${machinesData.length} m√°quinas encontradas`);\n\n    // Preparar dados para consultas em lote\n    const machineIds = machinesData.map((m: any) => m.id_maquina);\n    const machineCodes = machinesData.map((m: any) => m.Cod_maquina);\n    const ofCodes = machinesData.map((m: any) => m.Rt_Cod_of).filter((of: string) => of && of !== '--');\n    const productCodes = machinesData.map((m: any) => m.codigo_producto).filter((code: string) => code);\n\n    // Mapear dados das m√°quinas por c√≥digo\n    const machinesMap: { [key: string]: any } = {};\n    machinesData.forEach((machine: any) => {\n      machinesMap[machine.Cod_maquina] = machine;\n    });\n\n    // Executar consultas em lote paralelamente\n    const [\n      oeeTurnoData,\n      oeeOFData,\n      productionData,\n      lastProductionData\n    ] = await Promise.all([\n      getOeeTurnoData(machineCodes),\n      getOeeOFData(machineCodes),\n      getProductionData(ofCodes),\n      getLastProductionData(machineIds)\n    ]);\n\n    // Processar todas as m√°quinas\n    const machinesStatus: IMachineStatus[] = [];\n\n    for (const machine of machinesData) {\n      const status = await processMachineStatus(\n        machine,\n        oeeTurnoData,\n        oeeOFData,\n        productionData,\n        lastProductionData\n      );\n      \n      if (status) {\n        machinesStatus.push(status);\n      }\n    }\n\n    // Ordenar m√°quinas por tempo restante (similar ao PHP)\n    machinesStatus.sort((a, b) => {\n      const timeA = a.productionOF.remainingTime === 'N/A' ? Infinity : parseFloat(a.productionOF.remainingTime || '0');\n      const timeB = b.productionOF.remainingTime === 'N/A' ? Infinity : parseFloat(b.productionOF.remainingTime || '0');\n      \n      if (timeA > 0 && timeB > 0) return timeA - timeB;\n      if (timeA > 0 && timeB === Infinity) return -1;\n      if (timeA === Infinity && timeB > 0) return 1;\n      return 0;\n    });\n\n    console.log(`‚úÖ ${machinesStatus.length} m√°quinas processadas com sucesso`);\n    return machinesStatus;\n\n  } catch (error) {\n    console.error('‚ùå Erro ao obter status das m√°quinas:', error);\n    throw error;\n  }\n}\n\nasync function getOeeTurnoData(machineCodes: string[]): Promise<{ [key: string]: any }> {\n  if (!machineCodes.length) return {};\n\n  try {\n    const codesStr = machineCodes.map(code => `'${code.replace(/'/g, \"''\")}'`).join(',');\n    \n    const sql = `\n      SELECT \n        cm.Cod_maquina,\n        IIF(fhc.OEE_c < 0, 0, fhc.OEE_c) as oee,\n        IIF(fhc.Rend_c < 0, 0, fhc.Rend_c) as rend\n      FROM cfg_maquina cm\n      CROSS APPLY [F_his_ct]('WORKCENTER','DAY','TURNO',GETDATE() - 1, GETDATE() + 1, 0) fhc\n      WHERE cm.id_maquina = id_maquina \n      AND fhc.workgroup IN (${codesStr})\n      AND workgroup = Cod_maquina\n      AND fhc.timeperiod = CONVERT(VARCHAR(10), cm.rt_dia_productivo, 111) \n      AND fhc.desc_turno = cm.rt_desc_turno\n    `;\n\n    const result = await executeQuery<any>(sql, undefined, 'mapex');\n    const oeeData: { [key: string]: any } = {};\n\n    result.forEach((row: any) => {\n      oeeData[row.Cod_maquina] = row;\n    });\n\n    return oeeData;\n  } catch (error) {\n    console.error('‚ùå Erro ao obter dados OEE turno:', error);\n    return {};\n  }\n}\n\nasync function getOeeOFData(machineCodes: string[]): Promise<{ [key: string]: any }> {\n  if (!machineCodes.length) return {};\n\n  try {\n    const codesStr = machineCodes.map(code => `'${code.replace(/'/g, \"''\")}'`).join(',');\n    \n    const sql = `\n      SELECT \n        cm.Cod_maquina,\n        IIF(fhc.OEE_c < 0, 0, fhc.OEE_c) as oee_of,\n        IIF(fhc.Rend_c < 0, 0, fhc.Rend_c) as rend_of\n      FROM cfg_maquina cm\n      CROSS APPLY [F_his_ct]('WORKCENTER','','OF',GETDATE() - 10, GETDATE() + 1, '') fhc\n      WHERE cm.id_maquina = id_maquina \n      AND fhc.workgroup IN (${codesStr})\n      AND fhc.Cod_of = cm.rt_cod_of \n      AND cm.rt_id_his_fase > 1\n    `;\n\n    const result = await executeQuery<any>(sql, undefined, 'mapex');\n    const oeeData: { [key: string]: any } = {};\n\n    result.forEach((row: any) => {\n      oeeData[row.Cod_maquina] = row;\n    });\n\n    return oeeData;\n  } catch (error) {\n    console.error('‚ùå Erro ao obter dados OEE OF:', error);\n    return {};\n  }\n}\n\nasync function getProductionData(ofCodes: string[]): Promise<{ [key: string]: any }> {\n  if (!ofCodes.length) return {};\n\n  try {\n    const codesStr = ofCodes.map(code => `'${code.replace(/'/g, \"''\")}'`).join(',');\n    \n    const sql = `\n      SELECT \n        ho.cod_of,\n        SUM(hp.unidades_ok) as cantok,\n        SUM(hp.unidades_nok) as cantnok,\n        SUM(hp.unidades_repro) as cant_rw,\n        MIN(hp.Fecha_ini) as inicio,\n        SUM(CAST(DATEDIFF(SECOND, hp.fecha_ini, hp.fecha_fin) AS BIGINT)) as tiempo_prod\n      FROM his_prod hp\n      INNER JOIN his_fase hf ON hp.id_his_fase = hf.id_his_fase\n      INNER JOIN his_of ho ON hf.id_his_of = ho.id_his_of\n      INNER JOIN cfg_maquina cm ON hp.Id_maquina = cm.id_maquina\n      WHERE ho.cod_of IN (${codesStr}) \n      AND ho.cod_of LIKE '%SEC%'\n      AND (hp.unidades_ok + hp.unidades_nok + hp.unidades_repro) > 0\n      GROUP BY ho.cod_of\n    `;\n\n    const result = await executeQuery<any>(sql, undefined, 'mapex');\n    const productionData: { [key: string]: any } = {};\n\n    result.forEach((row: any) => {\n      productionData[row.cod_of] = row;\n    });\n\n    return productionData;\n  } catch (error) {\n    console.error('‚ùå Erro ao obter dados de produ√ß√£o:', error);\n    return {};\n  }\n}\n\nasync function getLastProductionData(machineIds: number[]): Promise<{ [key: string]: string }> {\n  if (!machineIds.length) return {};\n\n  try {\n    const idsStr = machineIds.map(id => `'${id}'`).join(',');\n    \n    const sql = `\n      SELECT \n        Id_maquina,\n        MAX(Fecha_fin) as ult_fecha\n      FROM his_prod\n      WHERE id_actividad = 2 \n      AND Id_maquina IN (${idsStr})\n      GROUP BY Id_maquina\n    `;\n\n    const result = await executeQuery<any>(sql, undefined, 'mapex');\n    const lastProductionData: { [key: string]: string } = {};\n\n    result.forEach((row: any) => {\n      lastProductionData[row.Id_maquina] = row.ult_fecha;\n    });\n\n    return lastProductionData;\n  } catch (error) {\n    console.error('‚ùå Erro ao obter √∫ltima data de produ√ß√£o:', error);\n    return {};\n  }\n}\n\nasync function processMachineStatus(\n  machine: any,\n  oeeTurnoData: { [key: string]: any },\n  oeeOFData: { [key: string]: any },\n  productionData: { [key: string]: any },\n  lastProductionData: { [key: string]: string }\n): Promise<IMachineStatus | null> {\n  try {\n    // Obter dados das consultas em lote\n    const oeeTurno = oeeTurnoData[machine.Cod_maquina] || { oee: 0, rend: 0 };\n    const oeeOF = oeeOFData[machine.Cod_maquina] || { oee_of: 0, rend_of: 0 };\n    const production = productionData[machine.Rt_Cod_of] || { cantok: 0, cantnok: 0, cant_rw: 0, tiempo_prod: 0 };\n    const startDate = production?.inicio || null;\n    const lastProduction = lastProductionData[machine.id_maquina];\n\n    // Calcular tempo desde √∫ltima produ√ß√£o\n    let hoursSinceLastProduction = 0;\n    if (lastProduction) {\n      const lastDate = new Date(lastProduction);\n      const now = new Date();\n      const diffMs = now.getTime() - lastDate.getTime();\n      hoursSinceLastProduction = diffMs / (1000 * 60 * 60);\n    }\n\n    // Calcular tempo restante\n    const totalProduced = production.cantok;\n    const remainingPieces = machine.Rt_Unidades_planning - totalProduced;\n    let remainingTime = 'N/A';\n    let estimatedFinish: string | undefined;\n\n    if (production.cantok + production.cantnok + production.cant_rw > 0 && remainingPieces > 0) {\n      const timePerPiece = production.tiempo_prod / (production.cantok + production.cantnok + production.cant_rw);\n      const remainingSeconds = remainingPieces * timePerPiece;\n      const remainingHours = remainingSeconds / 3600;\n      remainingTime = remainingHours.toFixed(1) + 'h';\n      estimatedFinish = new Date(Date.now() + remainingSeconds * 1000).toISOString().slice(0, 19).replace('T', ' ');\n    }\n\n    // Determinar status da m√°quina\n    let status: IMachineStatus['status'] = 'INACTIVA';\n    let downtime: string | undefined;\n\n    if (machine.rt_desc_paro === \"PAUSA\") {\n      status = 'PARADA';\n      downtime = \"PAUSA\";\n    } else if (machine.rt_desc_paro === \"SIN OPERARIO\") {\n      status = 'PARADA';\n      downtime = \"SIN OPERARIO\";\n    } else {\n      switch (machine.rt_id_actividad) {\n        case 2:\n          status = 'PRODUCIENDO';\n          break;\n        case 1:\n          status = 'INACTIVA';\n          break;\n        case 3:\n        case 5:\n        case 11:\n        case 20:\n        case 21:\n          status = 'ACTIVA';\n          break;\n        default:\n          status = 'INACTIVA';\n      }\n    }\n\n    // Calcular efici√™ncia (progresso)\n    const progress = machine.Rt_Unidades_planning > 0\n      ? Math.round((totalProduced / machine.Rt_Unidades_planning) * 100)\n      : 0;\n\n    // Formatar dados do operador\n    let operator = machine.Rt_Desc_operario;\n    let operatorFull = machine.Rt_Desc_operario;\n    if (operator && operator.includes(',')) {\n      operator = operator.split(',')[0] + \" + \" + (operator.split(',').length - 1);\n    }\n\n    // Calcular dados de produ√ß√£o OF\n    const productionOF: ProductionOFData = {\n      ok: production.cantok,\n      nok: production.cantnok,\n      rw: production.cant_rw,\n      total: production.cantok + production.cantnok + production.cant_rw,\n      progress,\n      remainingPieces: remainingPieces,\n      remainingTime: remainingTime || 'N/A',\n      startDate: startDate ? String(startDate).slice(0, 19).replace('T', ' ') : undefined,\n      estimatedFinish\n    };\n\n    // Calcular dados de velocidade\n    const velocity: VelocityData = {\n      current: machine.f_velocidad,\n      nominal: machine.Rt_Rendimientonominal1,\n      ratio: machine.Rt_Rendimientonominal1 > 0 ? machine.f_velocidad / machine.Rt_Rendimientonominal1 : 0\n    };\n\n    // Dados do produto\n    const product: ProductData = {\n      code: machine.codigo_producto || '',\n      description: machine.Rt_Desc_producto || ''\n    };\n\n    // Dados da ordem\n    const order: OrderData = {\n      code: machine.Rt_Cod_of,\n      shift: machine.rt_desc_turno || ''\n    };\n\n    return {\n      machine: {\n        Cod_maquina: machine.Cod_maquina,\n        desc_maquina: machine.desc_maquina,\n        id_maquina: machine.id_maquina,\n        Rt_Cod_of: machine.Rt_Cod_of,\n        rt_Cod_producto: machine.rt_Cod_producto,\n        rt_id_actividad: machine.rt_id_actividad,\n        rt_id_paro: machine.rt_id_paro,\n        Rt_Desc_producto: machine.Rt_Desc_producto,\n        Rt_Unidades_planning: machine.Rt_Unidades_planning,\n        Rt_Desc_actividad: machine.Rt_Desc_actividad,\n        Rt_Desc_operario: machine.Rt_Desc_operario,\n        Rt_Unidades_ok: machine.Rt_Unidades_ok,\n        Rt_Unidades_nok: machine.Rt_Unidades_nok,\n        f_velocidad: machine.f_velocidad,\n        Rt_Rendimientonominal1: machine.Rt_Rendimientonominal1,\n        rt_desc_paro: machine.rt_desc_paro,\n        codigo_producto: machine.codigo_producto,\n        rt_dia_productivo: machine.rt_dia_productivo,\n        rt_desc_turno: machine.rt_desc_turno,\n        activo: true\n      } as Machine,\n      status,\n      efficiency: oeeTurno.rend || oeeOF.rend_of || 0,\n      oee: oeeTurno.oee || oeeOF.oee_of || 0,\n      oeeBreakdown: null,\n      production: {\n        ok: production.cantok,\n        nok: production.cantnok,\n        rw: production.cant_rw,\n        total: production.cantok + production.cantnok + production.cant_rw\n      },\n      productionOF,\n      velocity,\n      currentOF: machine.Rt_Cod_of !== '--' ? machine.Rt_Cod_of : undefined,\n      operator: operator || undefined,\n      operatorFull: operatorFull || undefined,\n      downtime,\n      product,\n      order\n    };\n\n  } catch (error) {\n    console.error(`‚ùå Erro ao processar m√°quina ${machine.Cod_maquina}:`, error);\n    return null;\n  }\n}","import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/scada/machines/route\",\n        pathname: \"/api/scada/machines\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/Downloads/mrpii 2/src/app/api/scada/machines/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/scada/machines/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!getRequestMeta(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!getRequestMeta(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n"],"names":[],"mappings":"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","ignoreList":[2]}