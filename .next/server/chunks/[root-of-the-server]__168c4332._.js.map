{"version":3,"sources":["turbopack:///[project]/Downloads/mrpii 2/src/app/api/scada/costs-config/route.ts","turbopack:///[project]/Downloads/mrpii 2/node_modules/next/dist/src/build/templates/app-route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { executeQuery } from '../../../../../lib/database/connection';\n\n// Funci√≥n utilitaria para obtener costo de un producto\nexport async function getProductCost(cod_producto: string): Promise<number> {\n  try {\n    // Consulta simple para obtener costo configurado\n    const sql = `\n      SELECT TOP 1\n        cp.cod_producto,\n        0 as costo_default -- Por defecto\n      FROM cfg_producto cp\n      WHERE cp.cod_producto = @cod_producto\n        AND cp.activo = 1\n    `;\n\n    const result = await executeQuery(sql, { cod_producto });\n\n    if (!result || result.length === 0) {\n      console.warn(`‚ö†Ô∏è Producto ${cod_producto} no encontrado, usando costo por defecto ‚Ç¨0`);\n      return 0;\n    }\n\n    // Por ahora, retornar costo por defecto\n    // TODO: Implementar tabla de configuraci√≥n real\n    return 0;\n\n  } catch (error) {\n    console.error(`‚ùå Error obteniendo costo para ${cod_producto}:`, error);\n    return 0; // Fallback a valor por defecto\n  }\n}\n\n// Funci√≥n para obtener todos los costos de productos para c√°lculos mensuales\nexport async function getAllProductCosts(): Promise<{ [key: string]: number }> {\n  try {\n    console.log('üí∞ Obteniendo todos los costos de productos');\n\n    // Consulta para obtener todos los productos activos\n    const sql = `\n      SELECT DISTINCT\n        cp.cod_producto,\n        0 as costo_default -- Por defecto\n      FROM cfg_producto cp\n      WHERE cp.activo = 1\n        AND cp.cod_producto IS NOT NULL\n        AND cp.cod_producto != ''\n        AND cp.cod_producto != '--'\n        AND cp.cod_producto != '{0}'\n    `;\n\n    const products = await executeQuery(sql);\n    const costMap: { [key: string]: number } = {};\n\n    if (products && products.length > 0) {\n      products.forEach((product: any) => {\n        costMap[product.cod_producto] = product.costo_default;\n      });\n    }\n\n    console.log(`üí∞ Costos obtenidos para ${Object.keys(costMap).length} productos`);\n    return costMap;\n\n  } catch (error) {\n    console.error('‚ùå Error obteniendo todos los costos:', error);\n    return {}; // Retornar mapa vac√≠o como fallback\n  }\n}\n\n// API para configurar costos por producto/m√°quina\nexport async function GET(request: NextRequest) {\n  try {\n    console.log('‚öôÔ∏è Obteniendo configuraci√≥n de costos');\n\n    // Obtener productos con sus m√°quinas asociadas\n    const sql = `\n      SELECT DISTINCT\n        cp.cod_producto,\n        cp.desc_producto,\n        cm.Cod_maquina,\n        cm.desc_maquina,\n        0 as costo_unitario_default -- Sin productos = costo cero\n      FROM cfg_producto cp\n      LEFT JOIN cfg_maquina cm ON cp.cod_producto = cm.rt_Cod_producto\n      WHERE cp.activo = 1\n        AND cp.cod_producto IS NOT NULL\n        AND cp.cod_producto != ''\n        AND cp.cod_producto != '--'\n        AND cp.cod_producto != '{0}'\n      ORDER BY cp.cod_producto, cm.Cod_maquina\n    `;\n\n    const products = await executeQuery(sql);\n\n    // Crear estructura de respuesta\n    const costConfig: { [key: string]: any } = {};\n\n    products.forEach((product: any) => {\n      const productKey = product.cod_producto;\n\n      if (!costConfig[productKey]) {\n        costConfig[productKey] = {\n          cod_producto: product.cod_producto,\n          desc_producto: product.desc_producto,\n          costo_unitario: product.costo_unitario_default,\n          maquinas: [],\n          nota: 'Costo configurado manualmente (no viene de MAPEX)'\n        };\n      }\n\n      if (product.Cod_maquina) {\n        costConfig[productKey].maquinas.push({\n          cod_maquina: product.Cod_maquina,\n          desc_maquina: product.desc_maquina\n        });\n      }\n    });\n\n    console.log('‚öôÔ∏è Configuraci√≥n de costos obtenida:', Object.keys(costConfig).length, 'productos');\n\n    return NextResponse.json({\n      success: true,\n      data: costConfig,\n      timestamp: new Date().toISOString(),\n      nota: 'Costos por defecto: ‚Ç¨0. Configure valores reales usando POST'\n    });\n\n  } catch (error) {\n    console.error('‚ùå Error obteniendo configuraci√≥n de costos:', error);\n    return NextResponse.json({\n      success: false,\n      error: 'Error al obtener configuraci√≥n de costos',\n      details: error instanceof Error ? error.message : 'Error desconocido',\n      timestamp: new Date().toISOString()\n    }, { status: 500 });\n  }\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    console.log('üíæ Configurando costo personalizado');\n    const body = await request.json();\n\n    const { cod_producto, costo_unitario, maquina_id } = body;\n\n    if (!cod_producto || costo_unitario === undefined) {\n      return NextResponse.json({\n        success: false,\n        error: 'Faltan par√°metros requeridos: cod_producto y costo_unitario',\n        timestamp: new Date().toISOString()\n      }, { status: 400 });\n    }\n\n    // Validar que el producto existe en MAPEX\n    const checkProductSql = `\n      SELECT cod_producto, desc_producto\n      FROM cfg_producto\n      WHERE cod_producto = @cod_producto\n        AND activo = 1\n    `;\n\n    const productExists = await executeQuery(checkProductSql, { cod_producto });\n\n    if (!productExists || productExists.length === 0) {\n      return NextResponse.json({\n        success: false,\n        error: `Producto ${cod_producto} no encontrado en MAPEX`,\n        timestamp: new Date().toISOString()\n      }, { status: 404 });\n    }\n\n    // Aqu√≠ se podr√≠a guardar en una tabla de configuraci√≥n\n    // Por ahora, simularemos el guardado\n    console.log('üíæ Costo configurado:', {\n      cod_producto,\n      costo_unitario,\n      maquina_id,\n      producto: productExists[0].desc_producto\n    });\n\n    return NextResponse.json({\n      success: true,\n      message: `Costo de ‚Ç¨${costo_unitario} configurado para producto ${cod_producto}`,\n      data: {\n        cod_producto,\n        costo_unitario: parseFloat(costo_unitario),\n        maquina_id,\n        producto_descripcion: productExists[0].desc_producto\n      },\n      timestamp: new Date().toISOString()\n    });\n\n  } catch (error) {\n    console.error('‚ùå Error configurando costo:', error);\n    return NextResponse.json({\n      success: false,\n      error: 'Error al configurar costo',\n      details: error instanceof Error ? error.message : 'Error desconocido',\n      timestamp: new Date().toISOString()\n    }, { status: 500 });\n  }\n}\n","import {\n  AppRouteRouteModule,\n  type AppRouteRouteHandlerContext,\n  type AppRouteRouteModuleOptions,\n} from '../../server/route-modules/app-route/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\nimport { patchFetch as _patchFetch } from '../../server/lib/patch-fetch'\nimport type { IncomingMessage, ServerResponse } from 'node:http'\nimport { getRequestMeta } from '../../server/request-meta'\nimport { getTracer, type Span, SpanKind } from '../../server/lib/trace/tracer'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\nimport { NodeNextRequest, NodeNextResponse } from '../../server/base-http/node'\nimport {\n  NextRequestAdapter,\n  signalFromNodeResponse,\n} from '../../server/web/spec-extension/adapters/next-request'\nimport { BaseServerSpan } from '../../server/lib/trace/constants'\nimport { getRevalidateReason } from '../../server/instrumentation/utils'\nimport { sendResponse } from '../../server/send-response'\nimport {\n  fromNodeOutgoingHttpHeaders,\n  toNodeOutgoingHttpHeaders,\n} from '../../server/web/utils'\nimport { getCacheControlHeader } from '../../server/lib/cache-control'\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from '../../lib/constants'\nimport { NoFallbackError } from '../../shared/lib/no-fallback-error.external'\nimport {\n  CachedRouteKind,\n  type ResponseCacheEntry,\n  type ResponseGenerator,\n} from '../../server/response-cache'\n\nimport * as userland from 'VAR_USERLAND'\n\n// These are injected by the loader afterwards. This is injected as a variable\n// instead of a replacement because this could also be `undefined` instead of\n// an empty string.\ndeclare const nextConfigOutput: AppRouteRouteModuleOptions['nextConfigOutput']\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\n// INJECT:nextConfigOutput\n\nconst routeModule = new AppRouteRouteModule({\n  definition: {\n    kind: RouteKind.APP_ROUTE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    filename: 'VAR_DEFINITION_FILENAME',\n    bundlePath: 'VAR_DEFINITION_BUNDLE_PATH',\n  },\n  distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n  relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n  resolvedPagePath: 'VAR_RESOLVED_PAGE_PATH',\n  nextConfigOutput,\n  userland,\n})\n\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule\n\nfunction patchFetch() {\n  return _patchFetch({\n    workAsyncStorage,\n    workUnitAsyncStorage,\n  })\n}\n\nexport {\n  routeModule,\n  workAsyncStorage,\n  workUnitAsyncStorage,\n  serverHooks,\n  patchFetch,\n}\n\nexport async function handler(\n  req: IncomingMessage,\n  res: ServerResponse,\n  ctx: {\n    waitUntil: (prom: Promise<void>) => void\n  }\n) {\n  let srcPage = 'VAR_DEFINITION_PAGE'\n\n  // turbopack doesn't normalize `/index` in the page name\n  // so we need to to process dynamic routes properly\n  // TODO: fix turbopack providing differing value from webpack\n  if (process.env.TURBOPACK) {\n    srcPage = srcPage.replace(/\\/index$/, '') || '/'\n  } else if (srcPage === '/index') {\n    // we always normalize /index specifically\n    srcPage = '/'\n  }\n  const multiZoneDraftMode = process.env\n    .__NEXT_MULTI_ZONE_DRAFT_MODE as any as boolean\n\n  const prepareResult = await routeModule.prepare(req, res, {\n    srcPage,\n    multiZoneDraftMode,\n  })\n\n  if (!prepareResult) {\n    res.statusCode = 400\n    res.end('Bad Request')\n    ctx.waitUntil?.(Promise.resolve())\n    return null\n  }\n\n  const {\n    buildId,\n    params,\n    nextConfig,\n    isDraftMode,\n    prerenderManifest,\n    routerServerContext,\n    isOnDemandRevalidate,\n    revalidateOnlyGenerated,\n    resolvedPathname,\n  } = prepareResult\n\n  const normalizedSrcPage = normalizeAppPath(srcPage)\n\n  let isIsr = Boolean(\n    prerenderManifest.dynamicRoutes[normalizedSrcPage] ||\n      prerenderManifest.routes[resolvedPathname]\n  )\n\n  if (isIsr && !isDraftMode) {\n    const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname])\n    const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage]\n\n    if (prerenderInfo) {\n      if (prerenderInfo.fallback === false && !isPrerendered) {\n        throw new NoFallbackError()\n      }\n    }\n  }\n\n  let cacheKey: string | null = null\n\n  if (isIsr && !routeModule.isDev && !isDraftMode) {\n    cacheKey = resolvedPathname\n    // ensure /index and / is normalized to one key\n    cacheKey = cacheKey === '/index' ? '/' : cacheKey\n  }\n\n  const supportsDynamicResponse: boolean =\n    // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true ||\n    // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr\n\n  // This is a revalidation request if the request is for a static\n  // page and it is not being resumed from a postponed render and\n  // it is not a dynamic RSC request then it is a revalidation\n  // request.\n  const isRevalidate = isIsr && !supportsDynamicResponse\n\n  const method = req.method || 'GET'\n  const tracer = getTracer()\n  const activeSpan = tracer.getActiveScopeSpan()\n\n  const context: AppRouteRouteHandlerContext = {\n    params,\n    prerenderManifest,\n    renderOpts: {\n      experimental: {\n        cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n        authInterrupts: Boolean(nextConfig.experimental.authInterrupts),\n      },\n      supportsDynamicResponse,\n      incrementalCache: getRequestMeta(req, 'incrementalCache'),\n      cacheLifeProfiles: nextConfig.experimental?.cacheLife,\n      isRevalidate,\n      waitUntil: ctx.waitUntil,\n      onClose: (cb) => {\n        res.on('close', cb)\n      },\n      onAfterTaskError: undefined,\n      onInstrumentationRequestError: (error, _request, errorContext) =>\n        routeModule.onRequestError(\n          req,\n          error,\n          errorContext,\n          routerServerContext\n        ),\n    },\n    sharedContext: {\n      buildId,\n    },\n  }\n  const nodeNextReq = new NodeNextRequest(req)\n  const nodeNextRes = new NodeNextResponse(res)\n\n  const nextReq = NextRequestAdapter.fromNodeNextRequest(\n    nodeNextReq,\n    signalFromNodeResponse(res)\n  )\n\n  try {\n    const invokeRouteModule = async (span?: Span) => {\n      return routeModule.handle(nextReq, context).finally(() => {\n        if (!span) return\n\n        span.setAttributes({\n          'http.status_code': res.statusCode,\n          'next.rsc': false,\n        })\n\n        const rootSpanAttributes = tracer.getRootSpanAttributes()\n        // We were unable to get attributes, probably OTEL is not enabled\n        if (!rootSpanAttributes) {\n          return\n        }\n\n        if (\n          rootSpanAttributes.get('next.span_type') !==\n          BaseServerSpan.handleRequest\n        ) {\n          console.warn(\n            `Unexpected root span type '${rootSpanAttributes.get(\n              'next.span_type'\n            )}'. Please report this Next.js issue https://github.com/vercel/next.js`\n          )\n          return\n        }\n\n        const route = rootSpanAttributes.get('next.route')\n        if (route) {\n          const name = `${method} ${route}`\n\n          span.setAttributes({\n            'next.route': route,\n            'http.route': route,\n            'next.span_name': name,\n          })\n          span.updateName(name)\n        } else {\n          span.updateName(`${method} ${req.url}`)\n        }\n      })\n    }\n\n    const handleResponse = async (currentSpan?: Span) => {\n      const responseGenerator: ResponseGenerator = async ({\n        previousCacheEntry,\n      }) => {\n        try {\n          if (\n            !getRequestMeta(req, 'minimalMode') &&\n            isOnDemandRevalidate &&\n            revalidateOnlyGenerated &&\n            !previousCacheEntry\n          ) {\n            res.statusCode = 404\n            // on-demand revalidate always sets this header\n            res.setHeader('x-nextjs-cache', 'REVALIDATED')\n            res.end('This page could not be found')\n            return null\n          }\n\n          const response = await invokeRouteModule(currentSpan)\n\n          ;(req as any).fetchMetrics = (context.renderOpts as any).fetchMetrics\n          let pendingWaitUntil = context.renderOpts.pendingWaitUntil\n\n          // Attempt using provided waitUntil if available\n          // if it's not we fallback to sendResponse's handling\n          if (pendingWaitUntil) {\n            if (ctx.waitUntil) {\n              ctx.waitUntil(pendingWaitUntil)\n              pendingWaitUntil = undefined\n            }\n          }\n          const cacheTags = context.renderOpts.collectedTags\n\n          // If the request is for a static response, we can cache it so long\n          // as it's not edge.\n          if (isIsr) {\n            const blob = await response.blob()\n\n            // Copy the headers from the response.\n            const headers = toNodeOutgoingHttpHeaders(response.headers)\n\n            if (cacheTags) {\n              headers[NEXT_CACHE_TAGS_HEADER] = cacheTags\n            }\n\n            if (!headers['content-type'] && blob.type) {\n              headers['content-type'] = blob.type\n            }\n\n            const revalidate =\n              typeof context.renderOpts.collectedRevalidate === 'undefined' ||\n              context.renderOpts.collectedRevalidate >= INFINITE_CACHE\n                ? false\n                : context.renderOpts.collectedRevalidate\n\n            const expire =\n              typeof context.renderOpts.collectedExpire === 'undefined' ||\n              context.renderOpts.collectedExpire >= INFINITE_CACHE\n                ? undefined\n                : context.renderOpts.collectedExpire\n\n            // Create the cache entry for the response.\n            const cacheEntry: ResponseCacheEntry = {\n              value: {\n                kind: CachedRouteKind.APP_ROUTE,\n                status: response.status,\n                body: Buffer.from(await blob.arrayBuffer()),\n                headers,\n              },\n              cacheControl: { revalidate, expire },\n            }\n\n            return cacheEntry\n          } else {\n            // send response without caching if not ISR\n            await sendResponse(\n              nodeNextReq,\n              nodeNextRes,\n              response,\n              context.renderOpts.pendingWaitUntil\n            )\n            return null\n          }\n        } catch (err) {\n          // if this is a background revalidate we need to report\n          // the request error here as it won't be bubbled\n          if (previousCacheEntry?.isStale) {\n            await routeModule.onRequestError(\n              req,\n              err,\n              {\n                routerKind: 'App Router',\n                routePath: srcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                  isRevalidate,\n                  isOnDemandRevalidate,\n                }),\n              },\n              routerServerContext\n            )\n          }\n          throw err\n        }\n      }\n\n      const cacheEntry = await routeModule.handleResponse({\n        req,\n        nextConfig,\n        cacheKey,\n        routeKind: RouteKind.APP_ROUTE,\n        isFallback: false,\n        prerenderManifest,\n        isRoutePPREnabled: false,\n        isOnDemandRevalidate,\n        revalidateOnlyGenerated,\n        responseGenerator,\n        waitUntil: ctx.waitUntil,\n      })\n\n      // we don't create a cacheEntry for ISR\n      if (!isIsr) {\n        return null\n      }\n\n      if (cacheEntry?.value?.kind !== CachedRouteKind.APP_ROUTE) {\n        throw new Error(\n          `Invariant: app-route received invalid cache entry ${cacheEntry?.value?.kind}`\n        )\n      }\n\n      if (!getRequestMeta(req, 'minimalMode')) {\n        res.setHeader(\n          'x-nextjs-cache',\n          isOnDemandRevalidate\n            ? 'REVALIDATED'\n            : cacheEntry.isMiss\n              ? 'MISS'\n              : cacheEntry.isStale\n                ? 'STALE'\n                : 'HIT'\n        )\n      }\n\n      // Draft mode should never be cached\n      if (isDraftMode) {\n        res.setHeader(\n          'Cache-Control',\n          'private, no-cache, no-store, max-age=0, must-revalidate'\n        )\n      }\n\n      const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers)\n\n      if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n        headers.delete(NEXT_CACHE_TAGS_HEADER)\n      }\n\n      // If cache control is already set on the response we don't\n      // override it to allow users to customize it via next.config\n      if (\n        cacheEntry.cacheControl &&\n        !res.getHeader('Cache-Control') &&\n        !headers.get('Cache-Control')\n      ) {\n        headers.set(\n          'Cache-Control',\n          getCacheControlHeader(cacheEntry.cacheControl)\n        )\n      }\n\n      await sendResponse(\n        nodeNextReq,\n        nodeNextRes,\n        new Response(cacheEntry.value.body, {\n          headers,\n          status: cacheEntry.value.status || 200,\n        })\n      )\n      return null\n    }\n\n    // TODO: activeSpan code path is for when wrapped by\n    // next-server can be removed when this is no longer used\n    if (activeSpan) {\n      await handleResponse(activeSpan)\n    } else {\n      await tracer.withPropagatedContext(req.headers, () =>\n        tracer.trace(\n          BaseServerSpan.handleRequest,\n          {\n            spanName: `${method} ${req.url}`,\n            kind: SpanKind.SERVER,\n            attributes: {\n              'http.method': method,\n              'http.target': req.url,\n            },\n          },\n          handleResponse\n        )\n      )\n    }\n  } catch (err) {\n    // if we aren't wrapped by base-server handle here\n    if (!activeSpan && !(err instanceof NoFallbackError)) {\n      await routeModule.onRequestError(req, err, {\n        routerKind: 'App Router',\n        routePath: normalizedSrcPage,\n        routeType: 'route',\n        revalidateReason: getRevalidateReason({\n          isRevalidate,\n          isOnDemandRevalidate,\n        }),\n      })\n    }\n\n    // rethrow so that we can handle serving error page\n\n    // If this is during static generation, throw the error again.\n    if (isIsr) throw err\n\n    // Otherwise, send a 500 response.\n    await sendResponse(\n      nodeNextReq,\n      nodeNextRes,\n      new Response(null, { status: 500 })\n    )\n    return null\n  }\n}\n"],"names":["AppRouteRouteModule","RouteKind","patchFetch","_patchFetch","getRequestMeta","getTracer","SpanKind","normalizeAppPath","NodeNextRequest","NodeNextResponse","NextRequestAdapter","signalFromNodeResponse","BaseServerSpan","getRevalidateReason","sendResponse","fromNodeOutgoingHttpHeaders","toNodeOutgoingHttpHeaders","getCacheControlHeader","INFINITE_CACHE","NEXT_CACHE_TAGS_HEADER","NoFallbackError","CachedRouteKind","userland","routeModule","definition","kind","APP_ROUTE","page","pathname","filename","bundlePath","distDir","process","env","__NEXT_RELATIVE_DIST_DIR","relativeProjectDir","__NEXT_RELATIVE_PROJECT_DIR","resolvedPagePath","nextConfigOutput","workAsyncStorage","workUnitAsyncStorage","serverHooks","handler","req","res","ctx","nextConfig","srcPage","TURBOPACK","replace","multiZoneDraftMode","__NEXT_MULTI_ZONE_DRAFT_MODE","prepareResult","prepare","statusCode","end","waitUntil","Promise","resolve","buildId","params","isDraftMode","prerenderManifest","routerServerContext","isOnDemandRevalidate","revalidateOnlyGenerated","resolvedPathname","normalizedSrcPage","isIsr","Boolean","dynamicRoutes","routes","isPrerendered","prerenderInfo","fallback","cacheKey","isDev","supportsDynamicResponse","isRevalidate","method","tracer","activeSpan","getActiveScopeSpan","context","renderOpts","experimental","cacheComponents","authInterrupts","incrementalCache","cacheLifeProfiles","cacheLife","onClose","cb","on","onAfterTaskError","undefined","onInstrumentationRequestError","error","_request","errorContext","onRequestError","sharedContext","nodeNextReq","nodeNextRes","nextReq","fromNodeNextRequest","invokeRouteModule","span","handle","finally","setAttributes","rootSpanAttributes","getRootSpanAttributes","get","handleRequest","console","warn","route","name","updateName","url","handleResponse","currentSpan","cacheEntry","responseGenerator","previousCacheEntry","setHeader","response","fetchMetrics","pendingWaitUntil","cacheTags","collectedTags","blob","headers","type","revalidate","collectedRevalidate","expire","collectedExpire","value","status","body","Buffer","from","arrayBuffer","cacheControl","err","isStale","routerKind","routePath","routeType","revalidateReason","routeKind","isFallback","isRoutePPREnabled","Error","isMiss","delete","getHeader","set","Response","withPropagatedContext","trace","spanName","SERVER","attributes"],"mappings":"m9DAAA,IAAA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OAGO,eAAe,EAAe,CAAoB,EACvD,GAAI,CAEF,IAAM,EAAM,CAAC;;;;;;;IAOb,CAAC,CAEK,EAAS,MAAM,CAAA,EAAA,EAAA,YAAA,AAAY,EAAC,EAAK,cAAE,CAAa,GAStD,OAPK,GAA4B,GAAG,CAArB,EAAO,MAAM,EAC1B,QAAQ,IAAI,CAAC,CAAC,YAAY,EAAE,EAAa,2CAA2C,CAAC,EAMhF,CAET,CAAE,MAAO,EAAO,CAEd,OADA,QAAQ,KAAK,CAAC,CAAC,8BAA8B,EAAE,EAAa,CAAC,CAAC,CAAE,GACzD,CACT,CACF,CAFc,AAKP,eAAe,IACpB,GAAI,CACF,QAPyC,AAOjC,GAAG,CAAC,+CAGZ,IAAM,EAAM,CAAC;;;;;;;;;;IAUb,CAAC,CAEK,EAAW,MAAM,CAAA,EAAA,EAAA,YAAA,AAAY,EAAC,GAC9B,EAAqC,CAAC,EAS5C,OAPI,GAAY,EAAS,MAAM,CAAG,GAAG,AACnC,EAAS,OAAO,CAAC,AAAC,IAChB,CAAO,CAAC,EAAQ,YAAY,CAAC,CAAG,EAAQ,aAC1C,AADuD,GAIzD,QAAQ,GAAG,CAAC,CAAC,yBAAyB,EAAE,OAAO,IAAI,CAAC,GAAS,MAAM,CAAC,UAAU,CAAC,EACxE,CAET,CAAE,MAAO,EAAO,CAEd,OADA,QAAQ,KAAK,CAAC,uCAAwC,GAC/C,CAAC,CACV,CACF,CAFe,AAKR,eAAe,EAAI,CAAoB,EAC5C,GAAI,CACF,QAAQ,GAAG,CAPoC,AAOnC,yCAGZ,IAAM,EAAM,CAAC;;;;;;;;;;;;;;;IAeb,CAAC,CAEK,EAAW,MAAM,CAAA,EAAA,EAAA,YAAY,AAAZ,EAAa,GAG9B,EAAqC,CAAC,EAyB5C,OAvBA,EAAS,OAAO,CAAC,AAAC,IAChB,IAAM,EAAa,EAAQ,YAAY,AAEnC,CAAC,CAAU,CAAC,EAAW,EAAE,CAC3B,CAAU,CAAC,EAAW,CAAG,CACvB,aAAc,EAAQ,YAAY,CAClC,cAAe,EAAQ,aAAa,CACpC,eAAgB,EAAQ,sBAAsB,CAC9C,SAAU,EAAE,CACZ,KAAM,oDACR,EAGE,EAAQ,WAAW,EAAE,AACvB,CAAU,CAAC,EAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CACnC,YAAa,EAAQ,WAAW,CAChC,aAAc,EAAQ,YAAY,AACpC,EAEJ,GAEA,QAAQ,GAAG,CAAC,uCAAwC,OAAO,IAAI,CAAC,GAAY,MAAM,CAAE,aAE7E,EAAA,YAAY,CAAC,IAAI,CAAC,CACvB,QAAS,GACT,KAAM,EACN,UAAW,IAAI,OAAO,WAAW,GACjC,KAAM,8DACR,EAEF,CAAE,MAAO,EAAO,CAEd,OADA,QAAQ,KAAK,CAAC,8CAA+C,GACtD,EAAA,YAAY,CAAC,IAAI,CAAC,CACvB,SAAS,EACT,MAAO,2CACP,QAAS,aAAiB,MAAQ,EAAM,OAAO,CAAG,oBAClD,UAAW,IAAI,OAAO,WAAW,EACnC,EAAG,CAAE,OAAQ,GAAI,EACnB,CACF,CAEO,eAAe,EAAK,CAAoB,EAC7C,GAAI,CACF,QAAQ,GAAG,CAAC,uCAGZ,GAAM,cAAE,CAAY,CAAE,gBAAc,YAAE,CAAU,CAAE,CAFrC,EAEwC,IAFlC,EAAQ,IAAI,GAI/B,GAAI,CAAC,GAAgB,KAAmB,MACtC,KADiD,EAC1C,EAAA,YAAY,CAAC,IAAI,CAAC,CACvB,SAAS,EACT,MAAO,8DACP,UAAW,IAAI,OAAO,WAAW,EACnC,EAAG,CAAE,OAAQ,GAAI,GAInB,IAAM,EAAkB,CAAC;;;;;IAKzB,CAAC,CAEK,EAAgB,MAAM,CAAA,EAAA,EAAA,YAAA,AAAY,EAAC,EAAiB,cAAE,CAAa,GAEzE,GAAI,CAAC,GAA0C,GAAG,CAA5B,EAAc,MAAM,CACxC,OAAO,EAAA,YAAY,CAAC,IAAI,CAAC,CACvB,SAAS,EACT,MAAO,CAAC,SAAS,EAAE,EAAa,uBAAuB,CAAC,CACxD,UAAW,IAAI,OAAO,WAAW,EACnC,EAAG,CAAE,OAAQ,GAAI,GAYnB,OAPA,QAAQ,GAAG,CAAC,wBAAyB,cACnC,iBACA,EACA,aACA,SAAU,CAAa,CAAC,EAAE,CAAC,aAAa,AAC1C,GAEO,EAAA,YAAY,CAAC,IAAI,CAAC,CACvB,SAAS,EACT,QAAS,CAAC,UAAU,EAAE,EAAe,2BAA2B,EAAE,EAAA,CAAc,CAChF,KAAM,cACJ,EACA,eAAgB,WAAW,cAC3B,EACA,qBAAsB,CAAa,CAAC,EAAE,CAAC,aAAa,AACtD,EACA,UAAW,IAAI,OAAO,WAAW,EACnC,EAEF,CAAE,MAAO,EAAO,CAEd,OADA,QAAQ,KAAK,CAAC,8BAA+B,GACtC,EAAA,YAAY,CAAC,IAAI,CAAC,CACvB,SAAS,EACT,MAAO,4BACP,QAAS,aAAiB,MAAQ,EAAM,OAAO,CAAG,oBAClD,UAAW,IAAI,OAAO,WAAW,EACnC,EAAG,CAAE,OAAQ,GAAI,EACnB,CACF,oLCzMA,IAAA,EAIO,EAAA,CAHLA,AAGK,CAAA,OACP,EAA0B,EAAyB,CAAA,AAA1CC,CAA0C,GAAA,EAJ9B,EAKrB,CADkB,CAD2C,AAEnB,EAAA,CAAjCC,AAAiC,CAFnC,AAEmC,GADhB,CAC8C,GAExE,EAA+B,EAA2B,CAAjDE,AAAiD,CAFnCD,AAEmC,OAC1D,EAA+C,CADW,CACX,AAHb,CAGzBE,AAAqE,CAAA,AADvD,MAFmB,CAI1C,CAF+B,AACb,CACe,CADFC,CACE,CAAA,AAAxBC,CAAwB,KADM,CACmC,CAC1E,EAA0C,EAAQ,CAAzCC,AAAyC,CAAA,AAFH,CAEG,CADzB,KAEzB,EAEEG,CAJ+B,CAC8C,AAIxE,CAFLD,AAEK,CAAA,CAJiB,CAGA,CAHED,IAK1B,EAA+B,CADxB,CAC0D,CAAxDG,AAAwD,CAAA,IAH7C,EAIpB,AAN0C,AAGxCD,EAGkC,EAAA,CAA3BE,AAA2B,CAAA,CADb,IACiD,CACxE,EAA6B,CAFE,CAE0B,CAAhDC,AAAgD,CAAA,MAD7B,CAE5B,EADyD,AAGvDE,AAN4D,EAGzC,AAGM,CADzBD,AACyB,CAAA,CAJS,CAK7B,IAJsB,CAK7B,EAAsC,EAAA,CAAA,AAA7BE,CAA6B,CAFX,CAE2C,KACtE,EAAyBE,EAAsB,AAAQ,CAA9CD,AAA8C,CAAA,AAJ1B,CAEE,CAD7BF,IAGqD,CACvD,AAF8B,CAC8C,CAC5C,EAAA,CAAvBI,AAAuB,CADT,AACS,EAFM,AACbD,OACoD,KAArD,GACxB,IAAA,CADgC,CAKzB,EAA6B,CAHlCE,AAGkC,CAAA,OAEpC,EAAwC,EAAA,CAAA,CAAA,AAFJ,CAHnB,CAKLC,KAWZ,EAbO,EAaDC,EAAc,GAXM,CAWFvB,EAAAA,YAXgB,OAWhBA,CAAoB,CAC1CwB,WAAY,CACVC,KAAMxB,EAAAA,SAAAA,CAAUyB,SAAS,CACzBC,KAAM,gCACNC,SAAU,0BACVC,SAAU,QACVC,WAAY,EACd,EACAC,QAAqBG,CAAZF,EAAoC,KAC7CG,CADiBF,GAAG,AAA6B,CAA5BC,cAC0C,CAA3CF,EACpBK,MAD4BJ,GAAG,CAACG,OACd,oBADyC,kDAE3DE,iBAbF,CAA0B,WAcxBhB,CACF,GAKM,kBAAEiB,CAAgB,sBAAEC,CAAoB,aAAEC,CAAW,CAAE,CAAGlB,EAEhE,SAASrB,IACP,MAAA,CAAA,EAAOC,EAAAA,UAAAA,EAAY,kBACjBoC,uBACAC,CACF,EACF,CAUO,eAAeE,EACpBC,CAAoB,CACpBC,CAAmB,CACnBC,CAEC,MA6FsBC,EA3FvB,IAAIC,EAAU,gCAMZA,EAAUA,EAAQE,OAAO,CAAC,WAAY,KAAO,IAQ/C,IAAMG,EAAgB,MAAM7B,EAAY8B,OAAO,CAACV,EAAKC,EAAK,SACxDG,EACAG,mBAJCC,CAAAA,CAKH,GAEA,GAAI,AAP2B,CAO1BC,EAIH,OAHAR,EAAIU,IADc,MACJ,CAAG,IACjBV,EAAIW,GAAG,CAAC,eACK,MAAbV,CAAa,CAATW,IAAS,KAAA,EAAbX,EAAIW,SAAS,CAAA,IAAA,CAAbX,EAAgBY,QAAQC,OAAO,IACxB,KAGT,GAAM,CACJC,SAAO,QACPC,CAAM,YACNd,CAAU,aACVe,CAAW,mBACXC,CAAiB,qBACjBC,CAAmB,sBACnBC,CAAoB,yBACpBC,CAAuB,kBACvBC,CAAgB,CACjB,CAAGd,EAEEe,EAAAA,CAAAA,EAAoB5D,EAAAA,gBAAAA,EAAiBwC,GAEvCqB,GAAQC,EACVP,EAAkBQ,aAAa,CAACH,EAAkB,EAChDL,EAAkBS,MAAM,CAACL,EAAAA,AAAiB,EAG9C,GAAIE,GAAS,CAACP,EAAa,CACzB,IAAMW,GAAgBH,CAAQP,EAAkBS,MAAM,CAACL,EAAiB,CAClEO,EAAgBX,EAAkBQ,aAAa,CAACH,EAAkB,CAExE,GAAIM,GAC6B,KAA3BA,EAAcC,KADD,GACS,EAAc,CAACF,EACvC,MAAM,IAAIpD,EAAAA,CAD4C,cAC5CA,AAGhB,CAEA,IAAIuD,EAA0B,MAE1BP,GAAU7C,EAAYqD,IAAb,CAAkB,EAAKf,EAAD,EAGjCc,EAAWA,AAAa,OAHuB,KAC/CA,EAAWT,CAAAA,EAEwB,IAAMS,CAAAA,EAG3C,IAAME,GAEkB,IAAtBtD,EAAYqD,EACZ,GADiB,EAGjB,CAACR,EAMGU,EAAeV,GAAS,CAACS,EAEzBE,EAASpC,EAAIoC,MAAM,EAAI,AAZ+B,MAatDC,EAAAA,CAAAA,EAAS3E,EAAAA,SAAAA,IACT4E,EAAaD,EAAOE,WAZ6C,OAY3B,GAEtCC,EAAuC,QAC3CvB,oBACAE,EACAsB,WAAY,CACVC,aAAc,CACZC,iBAAiBjB,CAAQvB,EAAWuC,YAAY,CAACC,eAAe,CAChEC,gBAAgBlB,CAAQvB,EAAWuC,YAAY,CAACE,cAClD,AADgE,0BAEhEV,EACAW,iBAAAA,CAAAA,EAAkBpF,EAAAA,cAAAA,EAAeuC,EAAK,oBACtC8C,iBAAiB,CAAA,AAAyB,OAAvB3C,EAAAA,EAAWuC,YAAY,AAAZA,EAAY,KAAA,EAAvBvC,EAAyB4C,SAAS,CACrDZ,eACAtB,UAAWX,EAAIW,SAAS,CACxBmC,QAAS,AAACC,IACRhD,EAAIiD,EAAE,CAAC,QAASD,EAClB,EACAE,sBAAkBC,EAClBC,8BAA+B,CAACC,EAAOC,EAAUC,IAC/C5E,EAAY6E,cAAc,CACxBzD,EACAsD,EACAE,EACApC,EAEN,EACAsC,cAAe,SACb1C,CACF,CACF,EACM2C,EAAc,IAAI9F,EAAAA,eAAAA,CAAgBmC,GAClC4D,EAAc,IAAI9F,EAAAA,gBAAAA,CAAiBmC,GAEnC4D,EAAU9F,EAAAA,kBAAAA,CAAmB+F,mBAAmB,CACpDH,EAAAA,CAAAA,EACA3F,EAAAA,sBAAAA,EAAuBiC,IAGzB,GAAI,CACF,IAAM8D,EAAoB,MAAOC,GACxBpF,EAAYqF,MAAM,CAACJ,EAASrB,GAAS0B,OAAO,CAAC,KAClD,GAAI,CAACF,EAAM,OAEXA,EAAKG,aAAa,CAAC,CACjB,mBAAoBlE,EAAIU,UAAU,CAClC,YAAY,CACd,GAEA,IAAMyD,EAAqB/B,EAAOgC,qBAAqB,GAEvD,GAAI,CAACD,EACH,OAGF,GACEA,EAAmBE,GAAG,CAAC,EALA,kBAMvBrG,EAAAA,cAAAA,CAAesG,aAAa,CAC5B,YACAC,QAAQC,IAAI,CACV,CAAC,2BAA2B,EAAEL,EAAmBE,GAAG,CAClD,kBACA,qEAAqE,CAAC,EAK5E,IAAMI,EAAQN,EAAmBE,GAAG,CAAC,cACrC,GAAII,EAAO,CACT,IAAMC,EAAO,CAAA,EAAGvC,EAAO,CAAC,EAAEsC,EAAAA,CAAO,CAEjCV,EAAKG,aAAa,CAAC,CACjB,aAAcO,EACd,aAAcA,EACd,iBAAkBC,CACpB,GACAX,EAAKY,UAAU,CAACD,EAClB,MACEX,CADK,CACAY,UAAU,CAAC,CAAA,EAAGxC,EAAO,CAAC,EAAEpC,EAAI6E,GAAG,CAAA,CAAE,CAE1C,GAGIC,EAAiB,MAAOC,QA6HxBC,EAEqDA,EA9HzD,IAAMC,EAAuC,MAAO,oBAClDC,CAAkB,CACnB,IACC,GAAI,CACF,GACE,CAAA,CAAA,EAACzH,EAAAA,cAAAA,EAAeuC,EAAK,gBACrBqB,GACAC,GACA,CAAC4D,EAMD,OAJAjF,EAAIU,SADJ,CACc,CAAG,IAEjBV,EAAIkF,SAAS,CAAC,iBAAkB,eAChClF,EAAIW,GAAG,CAAC,gCACD,KAGT,IAAMwE,EAAW,MAAMrB,EAAkBgB,GAEvC/E,EAAYqF,YAAY,CAAI7C,EAAQC,UAAU,CAAS4C,YAAY,CACrE,IAAIC,EAAmB9C,EAAQC,UAAU,CAAC6C,gBAAgB,CAItDA,GACEpF,EAAIW,SAAS,EAAE,CACjBX,CAFkB,CAEdW,SAAS,CAACyE,GACdA,OAAmBlC,GAGvB,IAAMmC,EAAY/C,EAAQC,UAAU,CAAC+C,aAAa,CAIlD,IAAI/D,EA8CF,OANA,MAAA,CAAA,EAAMtD,EAAAA,YAAAA,EACJwF,EACAC,EACAwB,EACA5C,EAAQC,UAAU,CAAC6C,gBAAgB,EAE9B,IA9CE,EACT,IAAMG,EAAO,MAAML,EAASK,IAAI,GAG1BC,EAAAA,CAAAA,EAAUrH,EAAAA,yBAAAA,EAA0B+G,EAASM,OAAO,EAEtDH,IACFG,CAAO,CAAClH,EAAAA,GADK,mBACLA,CAAuB,CAAG+G,CAAAA,EAGhC,CAACG,CAAO,CAAC,eAAe,EAAID,EAAKE,IAAI,EAAE,CACzCD,CAAO,CAAC,eAAe,CAAGD,EAAKE,IAAAA,AAAI,EAGrC,IAAMC,EACJ,KAAkD,IAA3CpD,EAAQC,UAAU,CAACoD,mBAAmB,IAC7CrD,EAAQC,UAAU,CAACoD,mBAAmB,EAAItH,EAAAA,cAAAA,GAEtCiE,AADA,EACQC,UAAU,CAACoD,mBAAmB,CAEtCC,EACJ,KAA8C,IAAvCtD,EAAQC,UAAU,CAACsD,eAAe,EACzCvD,EAAQC,UAAU,CAACsD,eAAe,EAAIxH,EAAAA,cAAAA,MAClC6E,EACAZ,EAAQC,UAAU,CAACsD,eAAe,CAaxC,MAVuC,CACrCC,AASKhB,MATE,CACLlG,KAAMJ,EAAAA,eAAAA,CAAgBK,SAAS,CAC/BkH,OAAQb,EAASa,MAAM,CACvBC,KAAMC,OAAOC,IAAI,CAAC,MAAMX,EAAKY,WAAW,YACxCX,CACF,EACAY,aAAc,YAAEV,SAAYE,CAAO,CACrC,CAGF,CAUF,CAAE,KAVO,CAUAS,EAAK,CAmBZ,MAhBIrB,MAAAA,EAAAA,KAAAA,EAAAA,EAAoBsB,OAAO,AAAPA,EAAS,CAC/B,MAAM5H,EAAY6E,cAAc,CAC9BzD,EACAuG,EACA,CACEE,WAAY,aACZC,UAAWtG,EACXuG,UAAW,QACXC,iBAAAA,CAAAA,EAAkB1I,EAAAA,mBAAAA,EAAoB,cACpCiE,uBACAd,CACF,EACF,EACAD,GAGEmF,CACR,CACF,EAEMvB,EAAa,MAAMpG,EAAYkG,cAAc,CAAC,KAClD9E,aACAG,WACA6B,EACA6E,UAAWvJ,EAAAA,SAAAA,CAAUyB,SAAS,CAC9B+H,YAAY,oBACZ3F,EACA4F,mBAAmB,uBACnB1F,0BACAC,oBACA2D,EACApE,UAAWX,EAAIW,SAAS,AAC1B,GAGA,GAAI,CAACY,EACH,KADU,EACH,KAGT,GAAIuD,CAAAA,MAAAA,CAAAA,EAAAA,AAAiB,GAAjBA,IAAAA,EAAAA,EAAYgB,KAAK,AAALA,EAAK,KAAA,EAAjBhB,EAAmBlG,IAAI,IAAKJ,EAAAA,eAAAA,CAAgBK,SAAS,CACvD,CADyD,KACnD,OAAA,cAEL,CAFK,AAAIiI,MACR,CAAC,kDAAkD,EAAEhC,MAAAA,CAAAA,EAAAA,AAAiB,GAAjBA,IAAAA,EAAAA,EAAYgB,KAAAA,AAAK,EAAA,KAAA,EAAjBhB,EAAmBlG,IAAI,CAAA,CAAE,EAD1E,oBAAA,OAAA,mBAAA,gBAAA,CAEN,EAGE,CAAA,CAAA,EAACrB,EAAAA,cAAAA,EAAeuC,EAAK,gBAAgB,AACvCC,EAAIkF,SAAS,CACX,iBACA9D,EACI,cACA2D,EAAWiC,MAAM,CACf,OACAjC,EAAWwB,OAAO,CAChB,QACA,OAKRtF,GACFjB,EAAIkF,QADW,CACF,CACX,gBACA,2DAIJ,IAAMO,EAAAA,CAAAA,EAAUtH,EAAAA,2BAAAA,EAA4B4G,EAAWgB,KAAK,CAACN,OAAO,EA2BpE,MAzBMjI,AAAF,CAAEA,EAAAA,EAAAA,cAAAA,EAAeuC,EAAK,gBAAkByB,GAC1CiE,EAD8C,AACtCwB,GAD0C,GACpC,CAAC1I,EAAAA,sBAAAA,GAMfwG,EAAWsB,YAAY,EACtBrG,EAAIkH,AAAL,SAAc,CAAC,kBACdzB,EAAD,AAASpB,GAAG,CAAC,kBACb,AACAoB,EAAQ0B,GAAG,CACT,gBAAA,CAAA,EACA9I,EAAAA,qBAAAA,EAAsB0G,EAAWsB,YAAY,GAIjD,MAAA,CAAA,EAAMnI,EAAAA,YAAAA,EACJwF,EACAC,EACA,IAAIyD,SAASrC,EAAWgB,KAAK,CAACE,IAAI,CAAE,SAClCR,EACAO,OAAQjB,EAAWgB,KAAK,CAACC,MAAM,EAAI,GACrC,IAEK,IACT,EAII3D,EACF,MAAMwC,EAAexC,EADP,CAGd,MAAMD,EAAOiF,qBAAqB,CAACtH,EAAI0F,OAAO,CAAE,IAC9CrD,EAAOkF,KAAK,CACVtJ,EAAAA,cAAAA,CAAesG,aAAa,CAC5B,CACEiD,SAAU,CAAA,EAAGpF,EAAO,CAAC,EAAEpC,EAAI6E,GAAG,CAAA,CAAE,CAChC/F,KAAMnB,EAAAA,QAAAA,CAAS8J,MAAM,CACrBC,WAAY,CACV,cAAetF,EACf,cAAepC,EAAI6E,GACrB,AADwB,CAE1B,EACAC,GAIR,CAAE,MAAOyB,EAAK,CAiBZ,GAfI,AAACjE,GAAgBiE,WAAF,CAAEA,CAAe9H,EAAAA,eAAc,EAChD,CADoD,KAC9CG,EAAY6E,cAAc,CAACzD,EAAKuG,EAAK,CACzCE,WAAY,aACZC,UAAWlF,EACXmF,UAAW,QACXC,iBAAAA,CAAAA,EAAkB1I,EAAAA,mBAAAA,EAAoB,cACpCiE,uBACAd,CACF,EACF,GAMEI,EAAO,MAAM8E,EAQjB,OALA,MAAA,CAAA,EAAMpI,EAAAA,YAAAA,EACJwF,EACAC,EACA,IAAIyD,SAAS,KAAM,CAAEpB,OAAQ,GAAI,IAE5B,IACT,CACF","ignoreList":[1]}