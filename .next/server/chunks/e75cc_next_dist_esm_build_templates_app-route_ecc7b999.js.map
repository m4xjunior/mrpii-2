{"version":3,"sources":["turbopack:///[project]/Downloads/mrpii 2/src/app/api/analytics/historical/route.ts","turbopack:///[project]/Downloads/mrpii 2/node_modules/next/dist/esm/build/templates/app-route.js"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { executeQuery } from '../../../../../lib/database/connection';\nimport { calcularOEE, calcularOEEPonderado, generarAlertas, analizarParetoCausas } from '../../../../../lib/oee/calculations';\nimport { getAllProductCosts } from '../../scada/costs-config/route';\n\nexport async function GET(request: NextRequest) {\n  try {\n    const searchParams = request.nextUrl.searchParams;\n    const machineId = searchParams.get('machineId') || null;\n    const days = parseInt(searchParams.get('days') || '30');\n\n    console.log(`üìä Buscando datos hist√≥ricos - M√°quina: ${machineId}, D√≠as: ${days}`);\n\n    // Obtener costos de productos desde MAPEX\n    const productCosts = await getAllProductCosts();\n    const costoPromedioNok = Object.keys(productCosts).length > 0\n      ? Object.values(productCosts).reduce((sum, cost) => sum + cost, 0) / Object.keys(productCosts).length\n      : 15.50; // Fallback al valor por defecto\n\n    console.log('üí∞ Costo promedio para c√°lculos hist√≥ricos:', {\n      totalProductos: Object.keys(productCosts).length,\n      costoPromedio: costoPromedioNok,\n      nota: 'Usado para calcular costos de scrap en consultas SQL'\n    });\n\n    // Intentar obtener datos reales de MAPEX\n    let productionData = [];\n    let downtimeData = [];\n\n    try {\n      // Query muy simple para testear conectividad\n      const testSql = `SELECT TOP 1 'OK' as status, GETDATE() as fecha`;\n      await executeQuery(testSql, undefined, 'mapex');\n      console.log('‚úÖ Conexi√≥n MAPEX OK');\n\n      // Query simplificada para producci√≥n\n      const productionSql = `\n        SELECT TOP 10\n          CONVERT(VARCHAR(10), hp.fecha, 120) as fecha,\n          cm.Cod_maquina,\n          COUNT(*) as registros\n        FROM his_prod hp\n        INNER JOIN cfg_maquina cm ON hp.id_maquina = cm.id_maquina\n        WHERE hp.fecha >= DATEADD(day, -${days}, GETDATE())\n          AND cm.activo = 1\n          ${machineId ? `AND cm.Cod_maquina = '${machineId}'` : ''}\n        GROUP BY CONVERT(VARCHAR(10), hp.fecha, 120), cm.Cod_maquina\n        ORDER BY fecha DESC\n      `;\n\n      productionData = await executeQuery(productionSql, undefined, 'mapex');\n      console.log(`üìä Datos de producci√≥n: ${productionData.length} registros`);\n\n    } catch (prodError) {\n      const prodMsg = prodError instanceof Error ? prodError.message : String(prodError);\n      console.warn('‚ö†Ô∏è Error al buscar datos de producci√≥n:', prodMsg);\n      console.warn('‚ö†Ô∏è Usando datos simulados para producci√≥n');\n      productionData = getSimulatedProductionData(days, machineId);\n    }\n\n    try {\n      // Query simplificada para paros\n      const downtimeSql = `\n        SELECT TOP 10\n          CONVERT(VARCHAR(10), hpp.fecha_inicio, 120) as fecha,\n          cm.Cod_maquina,\n          COUNT(*) as num_paros\n        FROM his_prod_paro hpp\n        INNER JOIN his_prod hp ON hpp.id_his_prod = hp.id_his_prod\n        INNER JOIN cfg_maquina cm ON hp.id_maquina = cm.id_maquina\n        WHERE hpp.fecha_inicio >= DATEADD(day, -${days}, GETDATE())\n          AND cm.activo = 1\n          ${machineId ? `AND cm.Cod_maquina = '${machineId}'` : ''}\n        GROUP BY CONVERT(VARCHAR(10), hpp.fecha_inicio, 120), cm.Cod_maquina\n        ORDER BY fecha DESC\n      `;\n\n      downtimeData = await executeQuery(downtimeSql, undefined, 'mapex');\n      console.log(`üìä Datos de paros: ${downtimeData.length} registros`);\n\n    } catch (downError) {\n      const downMsg = downError instanceof Error ? downError.message : String(downError);\n      console.warn('‚ö†Ô∏è Error al buscar datos de paros:', downMsg);\n      console.warn('‚ö†Ô∏è Usando datos simulados para paros');\n      downtimeData = getSimulatedDowntimeData(days, machineId);\n    }\n\n    // Insights b√°sicos\n    const insights = [];\n    if (productionData.length > 0) {\n      const totalRegistros = productionData.reduce((sum, item) => sum + (item.registros || 0), 0);\n\n      insights.push({\n        tipo: 'PRODUCCION_RESUMEN',\n        mensaje: `Total registros de producci√≥n: ${totalRegistros} en ${productionData.length} d√≠as`,\n        prioridad: 'INFO'\n      });\n    }\n\n    if (downtimeData.length > 0) {\n      const totalParos = downtimeData.reduce((sum, item) => sum + (item.num_paros || 0), 0);\n      insights.push({\n        tipo: 'PAROS_RESUMEN',\n        mensaje: `Total paros registrados: ${totalParos} en ${downtimeData.length} d√≠as`,\n        prioridad: 'INFO'\n      });\n    }\n\n    return NextResponse.json({\n      success: true,\n      data: {\n        production: productionData,\n        downtime: downtimeData,\n        insights: insights,\n        filters: {\n          machineId,\n          days,\n          dateRange: {\n            from: new Date(Date.now() - days * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n            to: new Date().toISOString().split('T')[0]\n          }\n        }\n      },\n      timestamp: new Date().toISOString()\n    });\n\n  } catch (error) {\n    console.error('‚ùå Error en datos hist√≥ricos:', error);\n    return NextResponse.json({\n      success: false,\n      error: 'Error al obtener datos hist√≥ricos',\n      message: error instanceof Error ? error.message : 'Error desconocido'\n    }, { status: 500 });\n  }\n}\n\n// Funci√≥n para generar datos simulados de producci√≥n\nfunction getSimulatedProductionData(days: number, machineId: string | null) {\n  const data: any[] = [];\n  const machines = ['DOBL01', 'DOBL02', 'SOLD01', 'SOLD02', 'TROQ01', 'TERM01'];\n  const targetMachines = machineId ? [machineId] : machines;\n\n  for (let i = days; i >= 0; i--) {\n    const date = new Date();\n    date.setDate(date.getDate() - i);\n\n    targetMachines.forEach(machine => {\n      data.push({\n        fecha: date.toISOString().split('T')[0],\n        Cod_maquina: machine,\n        registros: Math.floor(Math.random() * 50) + 10 // 10-60 registros por d√≠a\n      });\n    });\n  }\n\n  return data;\n}\n\n// Funci√≥n para generar datos simulados de paros\nfunction getSimulatedDowntimeData(days: number, machineId: string | null) {\n  const data: any[] = [];\n  const machines = ['DOBL01', 'DOBL02', 'SOLD01', 'SOLD02', 'TROQ01', 'TERM01'];\n  const targetMachines = machineId ? [machineId] : machines;\n\n  for (let i = days; i >= 0; i--) {\n    const date = new Date();\n    date.setDate(date.getDate() - i);\n\n    targetMachines.forEach(machine => {\n      // Solo algunos d√≠as tienen paros\n      if (Math.random() < 0.3) {\n        data.push({\n          fecha: date.toISOString().split('T')[0],\n          Cod_maquina: machine,\n          num_paros: Math.floor(Math.random() * 3) + 1 // 1-3 paros por d√≠a\n        });\n      }\n    });\n  }\n\n  return data;\n}\n\nasync function getHistoricalProductionData(machineId: string | null, days: number, aggregation: string) {\n  const machineFilter = machineId ? `AND cm.Cod_maquina = '${machineId}'` : '';\n\n  let dateFormat = '';\n  let groupBy = '';\n\n  switch (aggregation) {\n    case 'minute':\n      dateFormat = \"FORMAT(hp.fecha, 'yyyy-MM-dd HH:mm')\";\n      groupBy = \"FORMAT(hp.fecha, 'yyyy-MM-dd HH:mm'), cm.Cod_maquina\";\n      break;\n    case 'hour':\n      dateFormat = \"FORMAT(hp.fecha, 'yyyy-MM-dd HH')\";\n      groupBy = \"FORMAT(hp.fecha, 'yyyy-MM-dd HH'), cm.Cod_maquina\";\n      break;\n    case 'day':\n      dateFormat = \"FORMAT(hp.fecha, 'yyyy-MM-dd')\";\n      groupBy = \"FORMAT(hp.fecha, 'yyyy-MM-dd'), cm.Cod_maquina\";\n      break;\n  }\n\n  const sql = `\n    SELECT\n      ${dateFormat} as periodo,\n      cm.Cod_maquina,\n      cm.desc_maquina,\n      SUM(hp.unidades_ok) as piezas_ok,\n      SUM(hp.unidades_nok) as piezas_nok,\n      SUM(hp.unidades_rw) as piezas_rw,\n      SUM(hp.unidades_ok + hp.unidades_nok + hp.unidades_rw) as total_pieces,\n      AVG(hp.velocidad_real) as velocidad_promedio,\n      AVG(hp.tiempo_ciclo_real) as tiempo_ciclo_promedio,\n      COUNT(*) as registros,\n      STRING_AGG(hp.turno, ',') as turnos,\n      STRING_AGG(DISTINCT hp.operario, ',') as operarios\n    FROM his_prod hp\n    INNER JOIN cfg_maquina cm ON hp.id_maquina = cm.id_maquina\n    WHERE hp.fecha >= DATEADD(day, -${days}, GETDATE())\n      AND cm.activo = 1\n      ${machineFilter}\n    GROUP BY ${groupBy}\n    ORDER BY periodo DESC, cm.Cod_maquina\n  `;\n\n  return await executeQuery(sql);\n}\n\nasync function getHistoricalDowntimeData(machineId: string | null, days: number) {\n  const machineFilter = machineId ? `AND cm.Cod_maquina = '${machineId}'` : '';\n\n  const sql = `\n    SELECT\n      FORMAT(hpp.fecha_inicio, 'yyyy-MM-dd HH:mm') as fecha_inicio,\n      FORMAT(hpp.fecha_fin, 'yyyy-MM-dd HH:mm') as fecha_fin,\n      cm.Cod_maquina,\n      cm.desc_maquina,\n      hpp.duracion_minutos,\n      CAST(hpp.duracion_minutos AS FLOAT) / 60 as duracion_horas,\n      hpp.tipo_paro,\n      hpp.desc_paro as causa,\n      hpp.operario,\n      CASE WHEN cpp.es_planificado = 1 THEN 1 ELSE 0 END as es_planificada,\n      cpp.costo_hora_estimado,\n      (CAST(hpp.duracion_minutos AS FLOAT) / 60) * ISNULL(cpp.costo_hora_estimado, 150) as costo_estimado_euros\n    FROM his_prod_paro hpp\n    INNER JOIN cfg_maquina cm ON hpp.id_maquina = cm.id_maquina\n    LEFT JOIN cfg_paro cpp ON hpp.id_tipo_paro = cpp.id_paro\n    WHERE hpp.fecha_inicio >= DATEADD(day, -${days}, GETDATE())\n      AND cm.activo = 1\n      ${machineFilter}\n    ORDER BY hpp.fecha_inicio DESC\n  `;\n\n  return await executeQuery(sql);\n}\n\nasync function calculateHistoricalOEE(machineId: string | null, days: number, aggregation: string) {\n  const machineFilter = machineId ? `AND cm.Cod_maquina = '${machineId}'` : '';\n\n  let dateFormat = '';\n  switch (aggregation) {\n    case 'hour':\n      dateFormat = \"FORMAT(fecha, 'yyyy-MM-dd HH')\";\n      break;\n    case 'day':\n      dateFormat = \"FORMAT(fecha, 'yyyy-MM-dd')\";\n      break;\n    default:\n      dateFormat = \"FORMAT(fecha, 'yyyy-MM-dd HH')\";\n  }\n\n  const sql = `\n    SELECT\n      ${dateFormat} as periodo,\n      cm.Cod_maquina,\n      cm.desc_maquina,\n      AVG(CAST(disponibilidad AS FLOAT)) as disponibilidad,\n      AVG(CAST(rendimiento AS FLOAT)) as rendimiento,\n      AVG(CAST(calidad AS FLOAT)) as calidad,\n      AVG(CAST(oee AS FLOAT)) as oee,\n      AVG(tiempo_planificado_min) as tiempo_planificado_promedio,\n      SUM(piezas_producidas) as total_piezas,\n      COUNT(*) as mediciones\n    FROM his_horaOEE hoee\n    INNER JOIN cfg_maquina cm ON hoee.id_maquina = cm.id_maquina\n    WHERE hoee.fecha >= DATEADD(day, -${days}, GETDATE())\n      AND cm.activo = 1\n      ${machineFilter}\n    GROUP BY ${dateFormat}, cm.Cod_maquina, cm.desc_maquina\n    ORDER BY periodo DESC, cm.Cod_maquina\n  `;\n\n  return await executeQuery(sql);\n}\n\nasync function getOperatorProductivityMetrics(machineId: string | null, days: number) {\n  const machineFilter = machineId ? `AND cm.Cod_maquina = '${machineId}'` : '';\n\n  const sql = `\n    SELECT\n      hp.operario,\n      cm.Cod_maquina,\n      COUNT(DISTINCT CAST(hp.fecha AS DATE)) as dias_trabajados,\n      SUM(hp.unidades_ok) as total_piezas_ok,\n      SUM(hp.unidades_nok) as total_piezas_nok,\n      SUM(hp.unidades_ok + hp.unidades_nok + hp.unidades_rw) as total_piezas,\n      AVG(CAST(hp.unidades_ok AS FLOAT) / NULLIF(hp.unidades_ok + hp.unidades_nok + hp.unidades_rw, 0)) as eficiencia_promedio,\n      SUM(hp.tiempo_trabajado_min) as total_minutos_trabajados,\n      CASE\n        WHEN SUM(hp.tiempo_trabajado_min) > 0\n        THEN (SUM(hp.unidades_ok) * 60.0) / SUM(hp.tiempo_trabajado_min)\n        ELSE 0\n      END as piezas_por_hora,\n      -- Calcular costo de ineficiencia\n      SUM(hp.unidades_nok) * 15.5 as costo_scrap_euros, -- Costo promedio fallback (no disponible aqu√≠)\n      -- Ranking por productividad\n      RANK() OVER (ORDER BY\n        CASE\n          WHEN SUM(hp.tiempo_trabajado_min) > 0\n          THEN (SUM(hp.unidades_ok) * 60.0) / SUM(hp.tiempo_trabajado_min)\n          ELSE 0\n        END DESC\n      ) as ranking_productividad\n    FROM his_prod hp\n    INNER JOIN cfg_maquina cm ON hp.id_maquina = cm.id_maquina\n    WHERE hp.fecha >= DATEADD(day, -${days}, GETDATE())\n      AND cm.activo = 1\n      AND hp.operario IS NOT NULL\n      AND hp.operario != ''\n      ${machineFilter}\n    GROUP BY hp.operario, cm.Cod_maquina\n    HAVING SUM(hp.tiempo_trabajado_min) >= 60 -- Al menos 1 hora trabajada\n    ORDER BY piezas_por_hora DESC\n  `;\n\n  return await executeQuery(sql);\n}\n\nasync function getCostAnalysis(machineId: string | null, days: number) {\n  const machineFilter = machineId ? `AND cm.Cod_maquina = '${machineId}'` : '';\n\n  const sql = `\n    SELECT\n      cm.Cod_maquina,\n      cm.desc_maquina,\n      -- Costos de paradas\n      SUM(CASE WHEN cpp.es_planificado = 0 THEN (CAST(hpp.duracion_minutos AS FLOAT) / 60) * ISNULL(cpp.costo_hora_estimado, 150) ELSE 0 END) as costo_paradas_no_planificadas_euros,\n      SUM(CASE WHEN cpp.es_planificado = 1 THEN (CAST(hpp.duracion_minutos AS FLOAT) / 60) * ISNULL(cpp.costo_hora_estimado, 75) ELSE 0 END) as costo_paradas_planificadas_euros,\n      -- Costos de scrap\n      SUM(hp.unidades_nok) * 15.5 as costo_scrap_euros,\n      -- Tiempo perdido\n      SUM(CASE WHEN cpp.es_planificado = 0 THEN hpp.duracion_minutos ELSE 0 END) as minutos_perdidos_no_planificados,\n      -- C√°lculo de oportunidad perdida (velocidad nominal vs real)\n      SUM(\n        CASE\n          WHEN hp.velocidad_nominal > hp.velocidad_real AND hp.tiempo_trabajado_min > 0\n          THEN ((hp.velocidad_nominal - hp.velocidad_real) / hp.velocidad_nominal) * hp.tiempo_trabajado_min * 2.5 -- ‚Ç¨2.5 por minuto de oportunidad\n          ELSE 0\n        END\n      ) as costo_oportunidad_perdida_euros,\n      -- Total de costos\n      SUM(CASE WHEN cpp.es_planificado = 0 THEN (CAST(hpp.duracion_minutos AS FLOAT) / 60) * ISNULL(cpp.costo_hora_estimado, 150) ELSE 0 END) +\n      SUM(hp.unidades_nok) * 15.5 +\n      SUM(\n        CASE\n          WHEN hp.velocidad_nominal > hp.velocidad_real AND hp.tiempo_trabajado_min > 0\n          THEN ((hp.velocidad_nominal - hp.velocidad_real) / hp.velocidad_nominal) * hp.tiempo_trabajado_min * 2.5\n          ELSE 0\n        END\n      ) as costo_total_perdidas_euros\n    FROM cfg_maquina cm\n    LEFT JOIN his_prod_paro hpp ON cm.id_maquina = hpp.id_maquina\n      AND hpp.fecha_inicio >= DATEADD(day, -${days}, GETDATE())\n    LEFT JOIN cfg_paro cpp ON hpp.id_tipo_paro = cpp.id_paro\n    LEFT JOIN his_prod hp ON cm.id_maquina = hp.id_maquina\n      AND hp.fecha >= DATEADD(day, -${days}, GETDATE())\n    WHERE cm.activo = 1\n      ${machineFilter}\n    GROUP BY cm.Cod_maquina, cm.desc_maquina\n    ORDER BY costo_total_perdidas_euros DESC\n  `;\n\n  return await executeQuery(sql);\n}\n\nasync function analyzeTrends(historicalData: any[]) {\n  if (historicalData.length < 2) return { trend: 'INSUFICIENTES_DATOS' };\n\n  // An√°lisis de tendencias simples\n  const recent = historicalData.slice(0, Math.floor(historicalData.length / 2));\n  const older = historicalData.slice(Math.floor(historicalData.length / 2));\n\n  const recentAvgProduction = recent.reduce((sum, item) => sum + item.total_pieces, 0) / recent.length;\n  const olderAvgProduction = older.reduce((sum, item) => sum + item.total_pieces, 0) / older.length;\n\n  const productionTrend = recentAvgProduction > olderAvgProduction ? 'MEJORANDO' :\n                         recentAvgProduction < olderAvgProduction ? 'EMPEORANDO' : 'ESTABLE';\n\n  return {\n    production_trend: productionTrend,\n    recent_avg_production: recentAvgProduction,\n    older_avg_production: olderAvgProduction,\n    improvement_percentage: ((recentAvgProduction - olderAvgProduction) / olderAvgProduction * 100).toFixed(2)\n  };\n}\n\nasync function generateInsights(machineId: string | null, oeeHistory: any[], downtimeData: any[]) {\n  const insights = [];\n\n  // An√°lisis simplificado - apenas insights b√°sicos\n  if (downtimeData.length > 0) {\n    const totalDowntime = downtimeData.reduce((sum, item) => sum + (item.duracion_horas || 0), 0);\n    insights.push({\n      tipo: 'RESUMEN_PAROS',\n      prioridad: 'MEDIA',\n      mensaje: `Total de tiempo en paros: ${totalDowntime.toFixed(1)} horas`,\n      accion_recomendada: 'Revisar eficiencia operacional',\n      datos: { totalDowntime, numParos: downtimeData.length }\n    });\n  }\n\n  if (oeeHistory.length > 0) {\n    const avgOEE = oeeHistory.reduce((sum, item) => sum + (item.oee || 0), 0) / oeeHistory.length;\n    insights.push({\n      tipo: 'RESUMEN_OEE',\n      prioridad: avgOEE < 75 ? 'ALTA' : 'MEDIA',\n      mensaje: `OEE promedio: ${avgOEE.toFixed(1)}%`,\n      accion_recomendada: avgOEE < 75 ? 'Mejorar disponibilidad, rendimiento y calidad' : 'Mantener el buen rendimiento',\n      datos: { avgOEE, numRegistros: oeeHistory.length }\n    });\n  }\n\n  return insights;\n}","import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/analytics/historical/route\",\n        pathname: \"/api/analytics/historical\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/Downloads/mrpii 2/src/app/api/analytics/historical/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/analytics/historical/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!getRequestMeta(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!getRequestMeta(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n"],"names":[],"mappings":"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","ignoreList":[1]}