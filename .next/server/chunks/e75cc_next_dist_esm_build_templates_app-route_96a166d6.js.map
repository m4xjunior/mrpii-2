{"version":3,"sources":["turbopack:///[project]/Downloads/mrpii 2/src/app/api/scada/machine-details/route.ts","turbopack:///[project]/Downloads/mrpii 2/node_modules/next/dist/esm/build/templates/app-route.js"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { executeQuery } from '../../../../../lib/database/connection';\nimport { calculateOEEForOF, calculateRemainingTime } from '../../../../../lib/oee/calculations';\n\nexport async function POST(request: NextRequest) {\n  try {\n    const { machineId, tab } = await request.json();\n\n    if (!machineId || !tab) {\n      return NextResponse.json({\n        success: false,\n        error: 'Parâmetros machineId e tab são obrigatórios'\n      }, { status: 400 });\n    }\n\n    let data;\n\n    switch (tab) {\n      case 'of':\n        data = await getOFData(machineId);\n        break;\n      case 'paros':\n        data = await getParosData(machineId);\n        break;\n      case 'produccion':\n        data = await getProduccionData(machineId);\n        break;\n      case 'oee':\n        data = await getOEEData(machineId);\n        break;\n      case 'pedidos':\n        data = await getPedidosData(machineId);\n        break;\n      case 'historico':\n        data = await getHistoricoData(machineId);\n        break;\n      case 'ventas':\n        data = await getVentasData(machineId);\n        break;\n      default:\n        return NextResponse.json({\n          success: false,\n          error: 'Tab não válida'\n        }, { status: 400 });\n    }\n\n    return NextResponse.json({\n      success: true,\n      data,\n      tab,\n      machineId,\n      timestamp: new Date().toISOString()\n    });\n\n  } catch (error) {\n    console.error('❌ Erro ao buscar detalhes da máquina:', error);\n    return NextResponse.json({\n      success: false,\n      error: 'Erro interno do servidor',\n      message: error instanceof Error ? error.message : 'Erro desconhecido'\n    }, { status: 500 });\n  }\n}\n\nasync function getOFData(machineId: string) {\n  try {\n    // Obtener información básica de la máquina y OF\n    const sql = `\n      SELECT\n        cm.Rt_Cod_of, cm.rt_Cod_producto, cm.Rt_Desc_producto,\n        cm.Rt_Unidades_planning, cm.rt_dia_productivo, cm.rt_desc_turno,\n        cm.Rt_Unidades_ok_of as Unidades_ok, cm.Rt_Unidades_nok_of as Rt_Unidades_nok, cm.Rt_Unidades_repro_of as Unidades_rw,\n        cm.f_velocidad, cm.rt_id_his_fase, cm.rt_Desc_operario,\n        ho.fecha_ini, ho.fecha_fin as fecha_fin_prevista, ho.id_his_of\n      FROM cfg_maquina cm\n      LEFT JOIN his_of ho ON cm.Rt_Cod_of = ho.cod_of\n      WHERE cm.Cod_maquina = '${machineId}'\n    `;\n\n    const result = await executeQuery(sql, undefined, 'mapex');\n    if (result.length === 0) return null;\n\n    const row = result[0];\n    const cod_of = row.Rt_Cod_of;\n    const id_his_of = row.id_his_of;\n\n    // Obtener datos OEE para la OF usando nossa função simulada\n    let oee_data = null;\n    try {\n      oee_data = await calculateOEEForOF(machineId, cod_of);\n    } catch (error) {\n      console.warn('⚠️ Erro ao calcular OEE para OF:', error);\n    }\n\n    // Obtener datos de producción detallados\n    let produccion_data = null;\n    if (id_his_of) {\n      const sql_produccion = `\n        SELECT\n          SUM(hp.unidades_ok) as total_ok,\n          SUM(hp.unidades_nok) as total_nok,\n          SUM(hp.unidades_repro) as total_rw,\n          SUM(CAST(DATEDIFF(SECOND, hp.fecha_ini, hp.fecha_fin) AS BIGINT)) as tiempo_produccion_segundos,\n          MIN(hp.fecha_ini) as fecha_inicio_real,\n          MAX(hp.fecha_fin) as fecha_fin_real\n        FROM his_prod hp\n        INNER JOIN his_fase hf ON hp.id_his_fase = hf.id_his_fase\n        WHERE hf.id_his_of = '${id_his_of}'\n        AND hp.id_actividad = 2\n      `;\n\n      const produccion_result = await executeQuery(sql_produccion, undefined, 'mapex');\n      produccion_data = produccion_result[0] || null;\n    }\n\n    // Obtener datos de paros para esta OF\n    let paros_data = null;\n    if (id_his_of) {\n      const sql_paros = `\n        SELECT\n          SUM(CAST(DATEDIFF(SECOND, hpp.fecha_ini, hpp.fecha_fin) AS BIGINT)) as tiempo_paros_segundos,\n          COUNT(DISTINCT hpp.Id_operario) as num_operarios\n        FROM his_prod hp\n        INNER JOIN his_prod_paro hpp ON hp.id_his_prod = hpp.id_his_prod\n        INNER JOIN his_fase hf ON hp.id_his_fase = hf.id_his_fase\n        WHERE hf.id_his_of = '${id_his_of}'\n      `;\n\n      const paros_result = await executeQuery(sql_paros, undefined, 'mapex');\n      paros_data = paros_result[0] || null;\n    }\n\n    // Obtener los principales paros\n    let principales_paros = [];\n    if (id_his_of) {\n      const sql_principales_paros = `\n        SELECT\n          cp.desc_paro,\n          SUM(CAST(DATEDIFF(SECOND, hpp.fecha_ini, hpp.fecha_fin) AS BIGINT)) as tiempo_segundos\n        FROM his_prod hp\n        INNER JOIN his_prod_paro hpp ON hp.id_his_prod = hpp.id_his_prod\n        INNER JOIN cfg_paro cp ON hpp.id_paro = cp.id_paro\n        INNER JOIN his_fase hf ON hp.id_his_fase = hf.id_his_fase\n        WHERE hf.id_his_of = '${id_his_of}'\n        GROUP BY cp.desc_paro\n        ORDER BY tiempo_segundos DESC\n      `;\n\n      principales_paros = await executeQuery(sql_principales_paros, undefined, 'mapex');\n    }\n\n    // Obtener datos para gráfico de producción por turno\n    let produccion_turno = [];\n    if (id_his_of) {\n      const sql_produccion_turno = `\n        SELECT\n          cm.rt_desc_turno as turno,\n          CONVERT(VARCHAR(10), hp.fecha_fin, 111) as fecha,\n          SUM(hp.unidades_ok) as unidades_ok,\n          SUM(hp.unidades_nok) as unidades_nok,\n          SUM(hp.unidades_repro) as unidades_rw\n        FROM his_prod hp\n        INNER JOIN cfg_maquina cm ON hp.Id_maquina = cm.id_maquina\n        INNER JOIN his_fase hf ON hp.id_his_fase = hf.id_his_fase\n        WHERE hf.id_his_of = '${id_his_of}'\n        AND cm.Cod_maquina = '${machineId}'\n        GROUP BY cm.rt_desc_turno, CONVERT(VARCHAR(10), hp.fecha_fin, 111)\n        ORDER BY fecha, turno\n      `;\n\n      produccion_turno = await executeQuery(sql_produccion_turno, undefined, 'mapex');\n    }\n\n    // Calcular métricas derivadas\n    const total_produced = produccion_data ?\n      (produccion_data.total_ok || 0) + (produccion_data.total_nok || 0) + (produccion_data.total_rw || 0) :\n      (row.Unidades_ok || 0) + (row.Rt_Unidades_nok || 0) + (row.Unidades_rw || 0);\n\n    const avance = row.Rt_Unidades_planning > 0 ?\n      Math.round((total_produced / row.Rt_Unidades_planning) * 10000) / 100 : 0;\n\n    const remaining_pieces = row.Rt_Unidades_planning - total_produced;\n    const remaining_time = calculateRemainingTime(remaining_pieces, row.f_velocidad || 0);\n\n    // Calcular desviación (calidad)\n    const desviacion = total_produced > 0 ?\n      Math.round(((row.Rt_Unidades_nok || 0) / total_produced) * 10000) / 100 : 0;\n\n    return {\n      // Información básica\n      ...row,\n      cod_of,\n      id_his_of,\n\n      // Métricas calculadas\n      total_produced,\n      avance_porcentaje: avance,\n      remaining_pieces,\n      remaining_time,\n      desviacion_porcentaje: desviacion,\n\n      // Datos OEE\n      oee_data,\n\n      // Datos de producción detallados\n      produccion_data,\n\n      // Datos de paros\n      paros_data,\n      principales_paros,\n\n      // Datos para gráficos\n      produccion_turno,\n\n      // Información adicional para UI\n      status: {\n        avance_class: avance >= 90 ? 'success' : (avance >= 70 ? 'warning' : 'danger'),\n        tiempo_class: remaining_pieces > 0 && row.f_velocidad > 0 ?\n          (remaining_pieces / row.f_velocidad > 24 ? 'warning' : 'success') : 'info',\n        desviacion_class: desviacion > 5 ? 'danger' : 'success'\n      }\n    };\n  } catch (error) {\n    console.error('❌ Erro ao obter dados OF:', error);\n    return null;\n  }\n}\n\nasync function getParosData(machineId: string) {\n  try {\n    // Obtener la OF actual de la máquina\n    const sql_of_actual = `SELECT Rt_Cod_of FROM cfg_maquina WHERE Cod_maquina = '${machineId}'`;\n    const result_of_actual = await executeQuery(sql_of_actual, undefined, 'mapex');\n    const of_actual = result_of_actual[0]?.Rt_Cod_of || '';\n\n    // Obtener tipos de paro para el filtro\n    const sql_tipos_paro = `SELECT DISTINCT id_paro, desc_paro FROM cfg_paro ORDER BY desc_paro`;\n    const tipos_paro = await executeQuery(sql_tipos_paro, undefined, 'mapex');\n\n    // Obtener lista de OFs para el filtro (últimos 7 días por defecto)\n    const sql_ofs = `\n      SELECT DISTINCT substring(hof.cod_of, 1, 15) as cod_of, hof.fecha_ini\n      FROM his_prod hp\n      INNER JOIN his_fase hf ON hp.id_his_fase = hf.id_his_fase\n      INNER JOIN his_of hof ON hf.id_his_of = hof.id_his_of\n      INNER JOIN cfg_maquina cm ON hp.id_maquina = cm.id_maquina\n      WHERE cm.Cod_maquina = '${machineId}'\n      AND hof.fecha_ini >= DATEADD(day, -7, GETDATE())\n      ORDER BY hof.fecha_ini DESC\n    `;\n    const ofs = await executeQuery(sql_ofs, undefined, 'mapex');\n\n    // Obtener paros con filtros (últimos 30 días por defecto)\n    const sql_paros = `\n      SELECT\n        hpp.fecha_ini,\n        hpp.fecha_fin,\n        DATEDIFF(MINUTE, hpp.fecha_ini, hpp.fecha_fin) as duracion_minutos,\n        cp.id_paro,\n        cp.desc_paro,\n        substring(hof.cod_of, 1, 15) as cod_of,\n        hpp.Id_operario,\n        COALESCE(hpo.observaciones, '') as observaciones\n      FROM his_prod hp\n      INNER JOIN his_prod_paro hpp ON hp.id_his_prod = hpp.id_his_prod\n      INNER JOIN cfg_paro cp ON hpp.id_paro = cp.id_paro\n      INNER JOIN cfg_maquina cm ON hp.id_maquina = cm.id_maquina\n      INNER JOIN his_fase hf ON hp.id_his_fase = hf.id_his_fase\n      INNER JOIN his_of hof ON hf.id_his_of = hof.id_his_of\n      LEFT JOIN his_paro_obs hpo ON hpo.his_paro = hpp.his_paro\n      WHERE cm.Cod_maquina = '${machineId}'\n      AND hpp.fecha_ini >= DATEADD(day, -30, GETDATE())\n      ORDER BY hpp.fecha_ini DESC\n    `;\n\n    const paros = await executeQuery(sql_paros, undefined, 'mapex');\n\n    // Calcular estadísticas de paros\n    const total_paros = paros.length;\n    const total_minutos = paros.reduce((sum, p) => sum + (p.duracion_minutos || 0), 0);\n\n    // Agrupar paros por tipo\n    const paros_por_tipo: { [key: string]: { count: number; minutos: number } } = {};\n    paros.forEach(paro => {\n      const tipo = paro.desc_paro || 'Sin tipo';\n      if (!paros_por_tipo[tipo]) {\n        paros_por_tipo[tipo] = { count: 0, minutos: 0 };\n      }\n      paros_por_tipo[tipo].count++;\n      paros_por_tipo[tipo].minutos += paro.duracion_minutos || 0;\n    });\n\n    return {\n      paros,\n      estadisticas: {\n        total_paros,\n        total_minutos,\n        promedio_minutos: total_paros > 0 ? Math.round(total_minutos / total_paros) : 0\n      },\n      paros_por_tipo: Object.entries(paros_por_tipo).map(([tipo, data]) => ({\n        tipo,\n        count: data.count,\n        minutos: data.minutos,\n        porcentaje: total_paros > 0 ? Math.round((data.count / total_paros) * 100) : 0\n      })),\n      filtros: {\n        of_actual,\n        tipos_paro,\n        ofs,\n        fecha_desde: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n        fecha_hasta: new Date().toISOString().split('T')[0]\n      }\n    };\n  } catch (error) {\n    console.error('❌ Erro ao obter dados de paros:', error);\n    return {\n      paros: [],\n      estadisticas: { total_paros: 0, total_minutos: 0, promedio_minutos: 0 },\n      paros_por_tipo: [],\n      filtros: { of_actual: '', tipos_paro: [], ofs: [], fecha_desde: '', fecha_hasta: '' }\n    };\n  }\n}\n\nasync function getProduccionData(machineId: string) {\n  const sql = `\n    SELECT TOP 20\n      hp.fecha, hp.turno, hp.unidades_ok, hp.unidades_nok, hp.unidades_rw,\n      hp.tiempo_produccion, hp.velocidad_media, hp.nom_operario\n    FROM his_prod hp\n    INNER JOIN cfg_maquina cm ON hp.id_maquina = cm.id_maquina\n    WHERE cm.Cod_maquina = '${machineId}'\n      AND hp.fecha >= DATEADD(day, -30, GETDATE())\n    ORDER BY hp.fecha DESC, hp.turno DESC\n  `;\n\n  try {\n    return await executeQuery(sql, undefined, 'mapex');\n  } catch (error) {\n    console.warn('⚠️ Error al obtener datos - retornando datos vacíos');\n    return [];\n  }\n}\n\nasync function getOEEData(machineId: string) {\n  const sql = `\n    SELECT TOP 10\n      fecha, turno,\n      disponibilidad, rendimiento, calidad, oee,\n      tiempo_planificado, tiempo_operativo, piezas_objetivo\n    FROM F_his_ct\n    WHERE id_maquina = (SELECT id_maquina FROM cfg_maquina WHERE Cod_maquina = '${machineId}')\n      AND fecha >= DATEADD(day, -30, GETDATE())\n    ORDER BY fecha DESC, turno DESC\n  `;\n\n  try {\n    return await executeQuery(sql, undefined, 'mapex');\n  } catch (error) {\n    console.warn('⚠️ Error al obtener datos - retornando datos vacíos');\n    return [];\n  }\n}\n\nasync function getPedidosData(machineId: string) {\n  try {\n    const sql = `\n      SELECT TOP 20\n        p.cod_pedido, p.desc_producto, p.cantidad_pedido, p.cantidad_entregada,\n        p.fecha_pedido, p.fecha_entrega_prevista, p.estado_pedido\n      FROM pedidos p\n      INNER JOIN cfg_maquina cm ON p.id_maquina = cm.id_maquina\n      WHERE cm.Cod_maquina = '${machineId}'\n        AND p.fecha_pedido >= DATEADD(day, -60, GETDATE())\n      ORDER BY p.fecha_pedido DESC\n    `;\n\n    return await executeQuery(sql, undefined, 'sage');\n  } catch (error) {\n    console.warn('⚠️ Banco SAGE não disponível para pedidos - retornando dados vazios');\n    return [];\n  }\n}\n\nasync function getHistoricoData(machineId: string) {\n  const sql = `\n    SELECT\n      CAST(hp.fecha AS DATE) as fecha,\n      SUM(hp.unidades_ok) as total_ok,\n      SUM(hp.unidades_nok) as total_nok,\n      SUM(hp.unidades_rw) as total_rw,\n      AVG(CASE WHEN hp.unidades_ok + hp.unidades_nok + hp.unidades_rw > 0\n               THEN (hp.unidades_ok * 100.0) / (hp.unidades_ok + hp.unidades_nok + hp.unidades_rw)\n               ELSE 0 END) as eficiencia_diaria\n    FROM his_prod hp\n    INNER JOIN cfg_maquina cm ON hp.id_maquina = cm.id_maquina\n    WHERE cm.Cod_maquina = '${machineId}'\n      AND hp.fecha >= DATEADD(day, -90, GETDATE())\n    GROUP BY CAST(hp.fecha AS DATE)\n    ORDER BY fecha DESC\n  `;\n\n  try {\n    return await executeQuery(sql, undefined, 'mapex');\n  } catch (error) {\n    console.warn('⚠️ Error al obtener datos - retornando datos vacíos');\n    return [];\n  }\n}\n\nasync function getVentasData(machineId: string) {\n  try {\n    const sql = `\n      SELECT TOP 20\n        v.cod_venta, v.cliente, v.producto, v.cantidad, v.valor_venta,\n        v.fecha_venta, v.estado_entrega\n      FROM ventas v\n      INNER JOIN cfg_maquina cm ON v.id_maquina = cm.id_maquina\n      WHERE cm.Cod_maquina = '${machineId}'\n        AND v.fecha_venta >= DATEADD(day, -90, GETDATE())\n      ORDER BY v.fecha_venta DESC\n    `;\n\n    return await executeQuery(sql, undefined, 'sage');\n  } catch (error) {\n    console.warn('⚠️ Banco SAGE não disponível para vendas - retornando dados vazios');\n    return [];\n  }\n}","import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/scada/machine-details/route\",\n        pathname: \"/api/scada/machine-details\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/Downloads/mrpii 2/src/app/api/scada/machine-details/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/scada/machine-details/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!getRequestMeta(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!getRequestMeta(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n"],"names":[],"mappings":"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","ignoreList":[1]}