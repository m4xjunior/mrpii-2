{"version":3,"sources":["turbopack:///[project]/Downloads/mrpii 2/src/app/api/scada/costs-config/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { executeQuery } from '../../../../../lib/database/connection';\n\n// Funci√≥n utilitaria para obtener costo de un producto\nexport async function getProductCost(cod_producto: string): Promise<number> {\n  try {\n    // Consulta simple para obtener costo configurado\n    const sql = `\n      SELECT TOP 1\n        cp.cod_producto,\n        0 as costo_default -- Por defecto\n      FROM cfg_producto cp\n      WHERE cp.cod_producto = @cod_producto\n        AND cp.activo = 1\n    `;\n\n    const result = await executeQuery(sql, { cod_producto });\n\n    if (!result || result.length === 0) {\n      console.warn(`‚ö†Ô∏è Producto ${cod_producto} no encontrado, usando costo por defecto ‚Ç¨0`);\n      return 0;\n    }\n\n    // Por ahora, retornar costo por defecto\n    // TODO: Implementar tabla de configuraci√≥n real\n    return 0;\n\n  } catch (error) {\n    console.error(`‚ùå Error obteniendo costo para ${cod_producto}:`, error);\n    return 0; // Fallback a valor por defecto\n  }\n}\n\n// Funci√≥n para obtener todos los costos de productos para c√°lculos mensuales\nexport async function getAllProductCosts(): Promise<{ [key: string]: number }> {\n  try {\n    console.log('üí∞ Obteniendo todos los costos de productos');\n\n    // Consulta para obtener todos los productos activos\n    const sql = `\n      SELECT DISTINCT\n        cp.cod_producto,\n        0 as costo_default -- Por defecto\n      FROM cfg_producto cp\n      WHERE cp.activo = 1\n        AND cp.cod_producto IS NOT NULL\n        AND cp.cod_producto != ''\n        AND cp.cod_producto != '--'\n        AND cp.cod_producto != '{0}'\n    `;\n\n    const products = await executeQuery(sql);\n    const costMap: { [key: string]: number } = {};\n\n    if (products && products.length > 0) {\n      products.forEach((product: any) => {\n        costMap[product.cod_producto] = product.costo_default;\n      });\n    }\n\n    console.log(`üí∞ Costos obtenidos para ${Object.keys(costMap).length} productos`);\n    return costMap;\n\n  } catch (error) {\n    console.error('‚ùå Error obteniendo todos los costos:', error);\n    return {}; // Retornar mapa vac√≠o como fallback\n  }\n}\n\n// API para configurar costos por producto/m√°quina\nexport async function GET(request: NextRequest) {\n  try {\n    console.log('‚öôÔ∏è Obteniendo configuraci√≥n de costos');\n\n    // Obtener productos con sus m√°quinas asociadas\n    const sql = `\n      SELECT DISTINCT\n        cp.cod_producto,\n        cp.desc_producto,\n        cm.Cod_maquina,\n        cm.desc_maquina,\n        0 as costo_unitario_default -- Sin productos = costo cero\n      FROM cfg_producto cp\n      LEFT JOIN cfg_maquina cm ON cp.cod_producto = cm.rt_Cod_producto\n      WHERE cp.activo = 1\n        AND cp.cod_producto IS NOT NULL\n        AND cp.cod_producto != ''\n        AND cp.cod_producto != '--'\n        AND cp.cod_producto != '{0}'\n      ORDER BY cp.cod_producto, cm.Cod_maquina\n    `;\n\n    const products = await executeQuery(sql);\n\n    // Crear estructura de respuesta\n    const costConfig: { [key: string]: any } = {};\n\n    products.forEach((product: any) => {\n      const productKey = product.cod_producto;\n\n      if (!costConfig[productKey]) {\n        costConfig[productKey] = {\n          cod_producto: product.cod_producto,\n          desc_producto: product.desc_producto,\n          costo_unitario: product.costo_unitario_default,\n          maquinas: [],\n          nota: 'Costo configurado manualmente (no viene de MAPEX)'\n        };\n      }\n\n      if (product.Cod_maquina) {\n        costConfig[productKey].maquinas.push({\n          cod_maquina: product.Cod_maquina,\n          desc_maquina: product.desc_maquina\n        });\n      }\n    });\n\n    console.log('‚öôÔ∏è Configuraci√≥n de costos obtenida:', Object.keys(costConfig).length, 'productos');\n\n    return NextResponse.json({\n      success: true,\n      data: costConfig,\n      timestamp: new Date().toISOString(),\n      nota: 'Costos por defecto: ‚Ç¨0. Configure valores reales usando POST'\n    });\n\n  } catch (error) {\n    console.error('‚ùå Error obteniendo configuraci√≥n de costos:', error);\n    return NextResponse.json({\n      success: false,\n      error: 'Error al obtener configuraci√≥n de costos',\n      details: error instanceof Error ? error.message : 'Error desconocido',\n      timestamp: new Date().toISOString()\n    }, { status: 500 });\n  }\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    console.log('üíæ Configurando costo personalizado');\n    const body = await request.json();\n\n    const { cod_producto, costo_unitario, maquina_id } = body;\n\n    if (!cod_producto || costo_unitario === undefined) {\n      return NextResponse.json({\n        success: false,\n        error: 'Faltan par√°metros requeridos: cod_producto y costo_unitario',\n        timestamp: new Date().toISOString()\n      }, { status: 400 });\n    }\n\n    // Validar que el producto existe en MAPEX\n    const checkProductSql = `\n      SELECT cod_producto, desc_producto\n      FROM cfg_producto\n      WHERE cod_producto = @cod_producto\n        AND activo = 1\n    `;\n\n    const productExists = await executeQuery(checkProductSql, { cod_producto });\n\n    if (!productExists || productExists.length === 0) {\n      return NextResponse.json({\n        success: false,\n        error: `Producto ${cod_producto} no encontrado en MAPEX`,\n        timestamp: new Date().toISOString()\n      }, { status: 404 });\n    }\n\n    // Aqu√≠ se podr√≠a guardar en una tabla de configuraci√≥n\n    // Por ahora, simularemos el guardado\n    console.log('üíæ Costo configurado:', {\n      cod_producto,\n      costo_unitario,\n      maquina_id,\n      producto: productExists[0].desc_producto\n    });\n\n    return NextResponse.json({\n      success: true,\n      message: `Costo de ‚Ç¨${costo_unitario} configurado para producto ${cod_producto}`,\n      data: {\n        cod_producto,\n        costo_unitario: parseFloat(costo_unitario),\n        maquina_id,\n        producto_descripcion: productExists[0].desc_producto\n      },\n      timestamp: new Date().toISOString()\n    });\n\n  } catch (error) {\n    console.error('‚ùå Error configurando costo:', error);\n    return NextResponse.json({\n      success: false,\n      error: 'Error al configurar costo',\n      details: error instanceof Error ? error.message : 'Error desconocido',\n      timestamp: new Date().toISOString()\n    }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":"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"}