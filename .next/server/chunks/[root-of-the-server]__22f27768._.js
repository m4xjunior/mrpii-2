module.exports=[51615,(e,r,t)=>{r.exports=e.x("node:buffer",()=>require("node:buffer"))},50227,(e,r,t)=>{r.exports=e.x("node:path",()=>require("node:path"))},2157,(e,r,t)=>{r.exports=e.x("node:fs",()=>require("node:fs"))},64673,e=>{"use strict";let r,t;e.s(["apps",()=>N,"default",()=>z,"openApp",()=>O],64673);var o=e.i(59639),i=e.i(51615),a=e.i(50227),n=e.i(57764),s=e.i(12057),l=e.i(74533),c=e.i(12714),f=e.i(60526),d=e.i(2157);function u(){return void 0===t&&(t=(()=>{try{return d.default.statSync("/run/.containerenv"),!0}catch{return!1}})()||(void 0===r&&(r=function(){try{return d.default.statSync("/.dockerenv"),!0}catch{return!1}}()||function(){try{return d.default.readFileSync("/proc/self/cgroup","utf8").includes("docker")}catch{return!1}}()),r)),t}let m=()=>{if("linux"!==o.default.platform)return!1;if(f.default.release().toLowerCase().includes("microsoft"))return!u();try{return!!d.default.readFileSync("/proc/version","utf8").toLowerCase().includes("microsoft")&&!u()}catch{return!1}},p=o.default.env.__IS_WSL_TEST__?m:m(),w=(()=>{let e,r="/mnt/";return async function(){if(e)return e;let t="/etc/wsl.conf",o=!1;try{await c.default.access(t,c.constants.F_OK),o=!0}catch{}if(!o)return r;let i=await c.default.readFile(t,{encoding:"utf8"}),a=/(?<!#.*)root\s*=\s*(?<mountPoint>.*)/g.exec(i);return a?e=(e=a.groups.mountPoint.trim()).endsWith("/")?e:`${e}/`:r}})(),g=async()=>{let e=await w();return`${e}c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe`},h=async()=>p?g():`${o.default.env.SYSTEMROOT||o.default.env.windir||String.raw`C:\Windows`}\\System32\\WindowsPowerShell\\v1.0\\powershell.exe`;function x(e,r,t){let o=t=>Object.defineProperty(e,r,{value:t,enumerable:!0,writable:!0});return Object.defineProperty(e,r,{configurable:!0,enumerable:!0,get(){let e=t();return o(e),e},set(e){o(e)}}),e}let y=(0,s.promisify)(l.execFile);async function v(){if("darwin"!==o.default.platform)throw Error("macOS only");let{stdout:e}=await y("defaults",["read","com.apple.LaunchServices/com.apple.launchservices.secure","LSHandlers"]),r=/LSHandlerRoleAll = "(?!-)(?<id>[^"]+?)";\s+?LSHandlerURLScheme = (?:http|https);/.exec(e);return r?.groups.id??"com.apple.Safari"}let S=(0,s.promisify)(l.execFile);async function b(e,{humanReadableOutput:r=!0,signal:t}={}){if("darwin"!==o.default.platform)throw Error("macOS only");let i={};t&&(i.signal=t);let{stdout:a}=await S("osascript",["-e",e,r?[]:["-ss"]],i);return a.trim()}async function E(e){return b(`tell application "Finder" to set app_path to application file id "${e}" as string
tell application "System Events" to get value of property list item "CFBundleName" of property list file (app_path & ":Contents:Info.plist")`)}let P=(0,s.promisify)(l.execFile),A={AppXq0fevzme2pys62n3e0fbqa7peapykr8v:{name:"Edge",id:"com.microsoft.edge.old"},MSEdgeDHTML:{name:"Edge",id:"com.microsoft.edge"},MSEdgeHTM:{name:"Edge",id:"com.microsoft.edge"},"IE.HTTP":{name:"Internet Explorer",id:"com.microsoft.ie"},FirefoxURL:{name:"Firefox",id:"org.mozilla.firefox"},ChromeHTML:{name:"Chrome",id:"com.google.chrome"},BraveHTML:{name:"Brave",id:"com.brave.Browser"},BraveBHTML:{name:"Brave Beta",id:"com.brave.Browser.beta"},BraveSSHTM:{name:"Brave Nightly",id:"com.brave.Browser.nightly"}};class B extends Error{}async function F(e=P){let{stdout:r}=await e("reg",["QUERY"," HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\Shell\\Associations\\UrlAssociations\\http\\UserChoice","/v","ProgId"]),t=/ProgId\s*REG_SZ\s*(?<id>\S+)/.exec(r);if(!t)throw new B(`Cannot find Windows browser in stdout: ${JSON.stringify(r)}`);let{id:o}=t.groups,i=A[o];if(!i)throw new B(`Unknown browser ID: ${o}`);return i}let C=(0,s.promisify)(l.execFile);async function L(){if("darwin"===o.default.platform){let e=await v();return{name:await E(e),id:e}}if("linux"===o.default.platform){let{stdout:e}=await C("xdg-mime",["query","default","x-scheme-handler/http"]),r=e.trim();return{name:r.replace(/.desktop$/,"").replace("-"," ").toLowerCase().replaceAll(/(?:^|\s|-)\S/g,e=>e.toUpperCase()),id:r}}if("win32"===o.default.platform)return F();throw Error("Only macOS, Linux, and Windows are supported")}let T=(0,s.promisify)(l.default.execFile),M=a.default.dirname((0,n.fileURLToPath)({get url(){return`file://${e.P("Downloads/mrpii 2/node_modules/open/index.js")}`}}.url)),H=a.default.join(M,"xdg-open"),{platform:$,arch:U}=o.default;async function _(){let e=await h(),r=String.raw`(Get-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\Shell\Associations\UrlAssociations\http\UserChoice").ProgId`,t=i.Buffer.from(r,"utf16le").toString("base64"),{stdout:o}=await T(e,["-NoProfile","-NonInteractive","-ExecutionPolicy","Bypass","-EncodedCommand",t],{encoding:"utf8"}),a=o.trim(),n={ChromeHTML:"com.google.chrome",BraveHTML:"com.brave.Browser",MSEdgeHTM:"com.microsoft.edge",FirefoxURL:"org.mozilla.firefox"};return n[a]?{id:n[a]}:{}}let I=async(e,r)=>{let t;for(let o of e)try{return await r(o)}catch(e){t=e}throw t},k=async e=>{let r;if(Array.isArray((e={wait:!1,background:!1,newInstance:!1,allowNonzeroExitCode:!1,...e}).app))return I(e.app,r=>k({...e,app:r}));let{name:t,arguments:a=[]}=e.app??{};if(a=[...a],Array.isArray(t))return I(t,r=>k({...e,app:{name:r,arguments:a}}));if("browser"===t||"browserPrivate"===t){let r={"com.google.chrome":"chrome","google-chrome.desktop":"chrome","com.brave.Browser":"brave","org.mozilla.firefox":"firefox","firefox.desktop":"firefox","com.microsoft.msedge":"edge","com.microsoft.edge":"edge","com.microsoft.edgemac":"edge","microsoft-edge.desktop":"edge"},o=p?await _():await L();if(o.id in r){let i=r[o.id];return"browserPrivate"===t&&a.push({chrome:"--incognito",brave:"--incognito",firefox:"--private-window",edge:"--inPrivate"}[i]),k({...e,app:{name:N[i],arguments:a}})}throw Error(`${o.name} is not supported as a default browser`)}let n=[],s={};if("darwin"===$)r="open",e.wait&&n.push("--wait-apps"),e.background&&n.push("--background"),e.newInstance&&n.push("--new"),t&&n.push("-a",t);else if("win32"!==$&&(!p||u()||t)){if(t)r=t;else{let e=!1;try{await c.default.access(H,c.constants.X_OK),e=!0}catch{}r=o.default.versions.electron??("android"===$||!M||"/"===M||!e)?"xdg-open":H}a.length>0&&n.push(...a),e.wait||(s.stdio="ignore",s.detached=!0)}else{r=await h(),n.push("-NoProfile","-NonInteractive","-ExecutionPolicy","Bypass","-EncodedCommand"),p||(s.windowsVerbatimArguments=!0);let o=["Start"];e.wait&&o.push("-Wait"),t?(o.push(`"\`"${t}\`""`),e.target&&a.push(e.target)):e.target&&o.push(`"${e.target}"`),a.length>0&&o.push("-ArgumentList",(a=a.map(e=>`"\`"${e}\`""`)).join(",")),e.target=i.Buffer.from(o.join(" "),"utf16le").toString("base64")}"darwin"===$&&a.length>0&&n.push("--args",...a),e.target&&n.push(e.target);let f=l.default.spawn(r,n,s);return e.wait?new Promise((r,t)=>{f.once("error",t),f.once("close",o=>{if(!e.allowNonzeroExitCode&&o>0)return void t(Error(`Exited with code ${o}`));r(f)})}):(f.unref(),f)},O=(e,r)=>{if("string"!=typeof e&&!Array.isArray(e))throw TypeError("Expected a valid `name`");let{arguments:t=[]}=r??{};if(null!=t&&!Array.isArray(t))throw TypeError("Expected `appArguments` as Array type");return k({...r,app:{name:e,arguments:t}})};function R(e){if("string"==typeof e||Array.isArray(e))return e;let{[U]:r}=e;if(!r)throw Error(`${U} is not supported`);return r}function W({[$]:e},{wsl:r}){if(r&&p)return R(r);if(!e)throw Error(`${$} is not supported`);return R(e)}let N={};x(N,"chrome",()=>W({darwin:"google chrome",win32:"chrome",linux:["google-chrome","google-chrome-stable","chromium"]},{wsl:{ia32:"/mnt/c/Program Files (x86)/Google/Chrome/Application/chrome.exe",x64:["/mnt/c/Program Files/Google/Chrome/Application/chrome.exe","/mnt/c/Program Files (x86)/Google/Chrome/Application/chrome.exe"]}})),x(N,"brave",()=>W({darwin:"brave browser",win32:"brave",linux:["brave-browser","brave"]},{wsl:{ia32:"/mnt/c/Program Files (x86)/BraveSoftware/Brave-Browser/Application/brave.exe",x64:["/mnt/c/Program Files/BraveSoftware/Brave-Browser/Application/brave.exe","/mnt/c/Program Files (x86)/BraveSoftware/Brave-Browser/Application/brave.exe"]}})),x(N,"firefox",()=>W({darwin:"firefox",win32:String.raw`C:\Program Files\Mozilla Firefox\firefox.exe`,linux:"firefox"},{wsl:"/mnt/c/Program Files/Mozilla Firefox/firefox.exe"})),x(N,"edge",()=>W({darwin:"microsoft edge",win32:"msedge",linux:["microsoft-edge","microsoft-edge-dev"]},{wsl:"/mnt/c/Program Files (x86)/Microsoft/Edge/Application/msedge.exe"})),x(N,"browser",()=>"browser"),x(N,"browserPrivate",()=>"browserPrivate");let z=(e,r)=>{if("string"!=typeof e)throw TypeError("Expected a `target`");return k({...r,target:e})}}];

//# sourceMappingURL=%5Broot-of-the-server%5D__22f27768._.js.map