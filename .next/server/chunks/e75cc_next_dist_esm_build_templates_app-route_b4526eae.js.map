{"version":3,"sources":["turbopack:///[project]/Downloads/mrpii 2/src/app/api/management/route.ts","turbopack:///[project]/Downloads/mrpii 2/node_modules/next/dist/esm/build/templates/app-route.js"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { executeQuery } from '../../../../lib/database/connection';\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    const { action, machineId, data } = body;\n\n    console.log(`üîß Acci√≥n de gesti√≥n: ${action} - M√°quina: ${machineId}`);\n\n    switch (action) {\n      case 'reclassify_stops':\n        return await reclassifyStops(machineId, data);\n\n      case 'merge_microstops':\n        return await mergeMicrostops(machineId, data);\n\n      case 'validate_causes':\n        return await validateCauses(machineId, data);\n\n      case 'export_data':\n        return await exportData(machineId, data);\n\n      case 'backup_data':\n        return await backupData(machineId, data);\n\n      case 'update_targets':\n        return await updateTargets(machineId, data);\n\n      default:\n        return NextResponse.json({\n          success: false,\n          error: 'Acci√≥n no reconocida'\n        }, { status: 400 });\n    }\n\n  } catch (error) {\n    console.error('‚ùå Error en gesti√≥n:', error);\n    return NextResponse.json({\n      success: false,\n      error: 'Error en operaci√≥n de gesti√≥n',\n      message: error instanceof Error ? error.message : 'Error desconocido'\n    }, { status: 500 });\n  }\n}\n\n// Reclasificar paradas seg√∫n nuevos criterios\nasync function reclassifyStops(machineId: string, data: any) {\n  const { stopIds, newCategory, newCause, reason } = data;\n\n  try {\n    // Actualizar clasificaci√≥n de paradas\n    const updateSql = `\n      UPDATE his_prod_paro\n      SET\n        tipo_paro = @newCategory,\n        desc_paro = @newCause,\n        observaciones = ISNULL(observaciones, '') + CHAR(13) + CHAR(10) +\n          'Reclasificado: ' + @reason + ' - ' + FORMAT(GETDATE(), 'yyyy-MM-dd HH:mm'),\n        usuario_modificacion = 'SISTEMA_GESTION',\n        fecha_modificacion = GETDATE()\n      WHERE id_paro IN (${stopIds.map((_: any, index: number) => `@stop${index}`).join(',')})\n        AND id_maquina = (SELECT id_maquina FROM cfg_maquina WHERE Cod_maquina = @machineId)\n    `;\n\n    const parameters = {\n      newCategory,\n      newCause,\n      reason,\n      machineId,\n      ...stopIds.reduce((acc: any, id: number, index: number) => {\n        acc[`stop${index}`] = id;\n        return acc;\n      }, {})\n    };\n\n    await executeQuery(updateSql, parameters);\n\n    // Registrar en audit log\n    await logManagementAction(machineId, 'RECLASSIFY_STOPS', {\n      stopIds,\n      newCategory,\n      newCause,\n      reason\n    });\n\n    return NextResponse.json({\n      success: true,\n      message: `${stopIds.length} paradas reclasificadas correctamente`,\n      timestamp: new Date().toISOString()\n    });\n\n  } catch (error) {\n    throw new Error(`Error reclasificando paradas: ${error}`);\n  }\n}\n\n// Mergear micro-paradas consecutivas\nasync function mergeMicrostops(machineId: string, data: any) {\n  const { threshold = 120, mergeWindow = 300 } = data; // 2 min threshold, 5 min window\n\n  try {\n    // Identificar micro-paradas candidatas para merge\n    const findMicrostopsSql = `\n      WITH MicrostopsConsecutivas AS (\n        SELECT\n          id_paro,\n          fecha_inicio,\n          fecha_fin,\n          duracion_minutos,\n          tipo_paro,\n          desc_paro,\n          LAG(fecha_fin) OVER (ORDER BY fecha_inicio) as prev_end,\n          LEAD(fecha_inicio) OVER (ORDER BY fecha_inicio) as next_start,\n          DATEDIFF(second, LAG(fecha_fin) OVER (ORDER BY fecha_inicio), fecha_inicio) as gap_seconds\n        FROM his_prod_paro hpp\n        INNER JOIN cfg_maquina cm ON hpp.id_maquina = cm.id_maquina\n        WHERE cm.Cod_maquina = @machineId\n          AND hpp.duracion_minutos <= @threshold\n          AND hpp.fecha_inicio >= DATEADD(day, -30, GETDATE())\n      )\n      SELECT\n        id_paro,\n        fecha_inicio,\n        fecha_fin,\n        duracion_minutos,\n        tipo_paro,\n        desc_paro,\n        gap_seconds\n      FROM MicrostopsConsecutivas\n      WHERE gap_seconds <= @mergeWindow\n      ORDER BY fecha_inicio\n    `;\n\n    const microstops = await executeQuery(findMicrostopsSql, {\n      machineId,\n      threshold,\n      mergeWindow\n    });\n\n    let mergedCount = 0;\n    const mergeGroups = [];\n    let currentGroup = [];\n\n    // Agrupar micro-paradas consecutivas\n    for (const stop of microstops) {\n      if (currentGroup.length === 0 || stop.gap_seconds <= mergeWindow) {\n        currentGroup.push(stop);\n      } else {\n        if (currentGroup.length > 1) {\n          mergeGroups.push([...currentGroup]);\n        }\n        currentGroup = [stop];\n      }\n    }\n\n    if (currentGroup.length > 1) {\n      mergeGroups.push(currentGroup);\n    }\n\n    // Ejecutar merges\n    for (const group of mergeGroups) {\n      const firstStop = group[0];\n      const lastStop = group[group.length - 1];\n      const totalDuration = group.reduce((sum, stop) => sum + stop.duracion_minutos, 0);\n\n      // Crear nueva parada merged\n      const insertMergedSql = `\n        INSERT INTO his_prod_paro (\n          id_maquina, fecha_inicio, fecha_fin, duracion_minutos,\n          tipo_paro, desc_paro, operario, observaciones\n        )\n        SELECT\n          id_maquina,\n          @startTime,\n          @endTime,\n          @totalDuration,\n          'MICRO_PARADA_MERGED',\n          'Micro-paradas fusionadas: ' + STRING_AGG(desc_paro, ' + '),\n          operario,\n          'Merged de ' + @groupSize + ' micro-paradas - IDs: ' + @originalIds\n        FROM his_prod_paro\n        WHERE id_paro = @firstStopId\n        GROUP BY id_maquina, operario\n      `;\n\n      await executeQuery(insertMergedSql, {\n        startTime: firstStop.fecha_inicio,\n        endTime: lastStop.fecha_fin,\n        totalDuration,\n        groupSize: group.length,\n        originalIds: group.map(s => s.id_paro).join(','),\n        firstStopId: firstStop.id_paro\n      });\n\n      // Marcar paradas originales como merged\n      const markMergedSql = `\n        UPDATE his_prod_paro\n        SET\n          observaciones = ISNULL(observaciones, '') + ' [MERGED - ' + FORMAT(GETDATE(), 'yyyy-MM-dd HH:mm') + ']',\n          activo = 0\n        WHERE id_paro IN (${group.map((_, i) => `@id${i}`).join(',')})\n      `;\n\n      const markParams = group.reduce((acc, stop, i) => {\n        acc[`id${i}`] = stop.id_paro;\n        return acc;\n      }, {} as any);\n\n      await executeQuery(markMergedSql, markParams);\n      mergedCount += group.length;\n    }\n\n    await logManagementAction(machineId, 'MERGE_MICROSTOPS', {\n      threshold,\n      mergeWindow,\n      groupsProcessed: mergeGroups.length,\n      stopsProcessed: mergedCount\n    });\n\n    return NextResponse.json({\n      success: true,\n      message: `${mergedCount} micro-paradas fusionadas en ${mergeGroups.length} grupos`,\n      details: {\n        groupsCreated: mergeGroups.length,\n        originalStops: mergedCount,\n        threshold,\n        mergeWindow\n      },\n      timestamp: new Date().toISOString()\n    });\n\n  } catch (error) {\n    throw new Error(`Error mergeando micro-paradas: ${error}`);\n  }\n}\n\n// Validar causas de parada\nasync function validateCauses(machineId: string, data: any) {\n  const { validations } = data; // Array de {stopId, validated, comments}\n\n  try {\n    for (const validation of validations) {\n      await executeQuery(`\n        UPDATE his_prod_paro\n        SET\n          validado = @validated,\n          comentarios_validacion = @comments,\n          fecha_validacion = GETDATE(),\n          usuario_validacion = 'SISTEMA_GESTION'\n        WHERE id_paro = @stopId\n      `, {\n        stopId: validation.stopId,\n        validated: validation.validated ? 1 : 0,\n        comments: validation.comments || ''\n      });\n    }\n\n    await logManagementAction(machineId, 'VALIDATE_CAUSES', {\n      validationsProcessed: validations.length\n    });\n\n    return NextResponse.json({\n      success: true,\n      message: `${validations.length} causas validadas correctamente`,\n      timestamp: new Date().toISOString()\n    });\n\n  } catch (error) {\n    throw new Error(`Error validando causas: ${error}`);\n  }\n}\n\n// Exportar datos\nasync function exportData(machineId: string, data: any) {\n  const { format, dateRange, includeCharts } = data;\n\n  try {\n    const startDate = new Date(dateRange.start);\n    const endDate = new Date(dateRange.end);\n\n    // Obtener datos para exportaci√≥n\n    const exportData = await getExportData(machineId, startDate, endDate);\n\n    // Generar archivo seg√∫n formato\n    let fileUrl = '';\n    switch (format) {\n      case 'excel':\n        fileUrl = await generateExcelExport(exportData, machineId, includeCharts);\n        break;\n      case 'pdf':\n        fileUrl = await generatePDFReport(exportData, machineId, includeCharts);\n        break;\n      case 'csv':\n        fileUrl = await generateCSVExport(exportData, machineId);\n        break;\n    }\n\n    await logManagementAction(machineId, 'EXPORT_DATA', {\n      format,\n      dateRange,\n      includeCharts,\n      fileUrl\n    });\n\n    return NextResponse.json({\n      success: true,\n      message: `Datos exportados en formato ${format.toUpperCase()}`,\n      fileUrl,\n      timestamp: new Date().toISOString()\n    });\n\n  } catch (error) {\n    throw new Error(`Error exportando datos: ${error}`);\n  }\n}\n\n// Backup de datos\nasync function backupData(machineId: string, data: any) {\n  const { includeHistorical = true, compress = true } = data;\n\n  try {\n    const backupId = `backup_${machineId}_${Date.now()}`;\n\n    // Crear backup en tabla temporal\n    await executeQuery(`\n      SELECT *\n      INTO temp_backup_${backupId}\n      FROM his_prod hp\n      INNER JOIN cfg_maquina cm ON hp.id_maquina = cm.id_maquina\n      WHERE cm.Cod_maquina = @machineId\n        ${includeHistorical ? '' : 'AND hp.fecha >= DATEADD(day, -90, GETDATE())'}\n    `, { machineId });\n\n    await logManagementAction(machineId, 'BACKUP_DATA', {\n      backupId,\n      includeHistorical,\n      compress\n    });\n\n    return NextResponse.json({\n      success: true,\n      message: `Backup creado correctamente`,\n      backupId,\n      timestamp: new Date().toISOString()\n    });\n\n  } catch (error) {\n    throw new Error(`Error creando backup: ${error}`);\n  }\n}\n\n// Actualizar metas/targets\nasync function updateTargets(machineId: string, data: any) {\n  const { oeeTarget, availabilityTarget, performanceTarget, qualityTarget } = data;\n\n  try {\n    await executeQuery(`\n      UPDATE cfg_maquina_metas\n      SET\n        meta_oee = @oeeTarget,\n        meta_disponibilidad = @availabilityTarget,\n        meta_rendimiento = @performanceTarget,\n        meta_calidad = @qualityTarget,\n        fecha_actualizacion = GETDATE()\n      WHERE id_maquina = (SELECT id_maquina FROM cfg_maquina WHERE Cod_maquina = @machineId)\n\n      IF @@ROWCOUNT = 0\n      BEGIN\n        INSERT INTO cfg_maquina_metas (\n          id_maquina, meta_oee, meta_disponibilidad, meta_rendimiento, meta_calidad, fecha_actualizacion\n        )\n        SELECT\n          id_maquina, @oeeTarget, @availabilityTarget, @performanceTarget, @qualityTarget, GETDATE()\n        FROM cfg_maquina\n        WHERE Cod_maquina = @machineId\n      END\n    `, {\n      machineId,\n      oeeTarget,\n      availabilityTarget,\n      performanceTarget,\n      qualityTarget\n    });\n\n    await logManagementAction(machineId, 'UPDATE_TARGETS', {\n      oeeTarget,\n      availabilityTarget,\n      performanceTarget,\n      qualityTarget\n    });\n\n    return NextResponse.json({\n      success: true,\n      message: 'Metas actualizadas correctamente',\n      timestamp: new Date().toISOString()\n    });\n\n  } catch (error) {\n    throw new Error(`Error actualizando metas: ${error}`);\n  }\n}\n\n// Funciones auxiliares\nasync function logManagementAction(machineId: string, action: string, details: any) {\n  try {\n    await executeQuery(`\n      INSERT INTO log_management_actions (\n        machine_id, action_type, action_details, timestamp, user_id\n      ) VALUES (\n        @machineId, @action, @details, GETDATE(), 'SISTEMA_GESTION'\n      )\n    `, {\n      machineId,\n      action,\n      details: JSON.stringify(details)\n    });\n  } catch (error) {\n    console.warn('Warning: Could not log management action:', error);\n  }\n}\n\nasync function getExportData(machineId: string, startDate: Date, endDate: Date) {\n  // Implementar obtenci√≥n de datos para exportaci√≥n\n  return {\n    production: [],\n    downtime: [],\n    oee: [],\n    costs: []\n  };\n}\n\nasync function generateExcelExport(data: any, machineId: string, includeCharts: boolean): Promise<string> {\n  // Implementar generaci√≥n de Excel\n  return `/exports/excel_${machineId}_${Date.now()}.xlsx`;\n}\n\nasync function generatePDFReport(data: any, machineId: string, includeCharts: boolean): Promise<string> {\n  // Implementar generaci√≥n de PDF\n  return `/exports/report_${machineId}_${Date.now()}.pdf`;\n}\n\nasync function generateCSVExport(data: any, machineId: string): Promise<string> {\n  // Implementar generaci√≥n de CSV\n  return `/exports/data_${machineId}_${Date.now()}.csv`;\n}","import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/management/route\",\n        pathname: \"/api/management\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/Downloads/mrpii 2/src/app/api/management/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/management/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!getRequestMeta(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!getRequestMeta(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n"],"names":[],"mappings":"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","ignoreList":[1]}