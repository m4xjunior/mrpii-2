{"version":3,"sources":["turbopack:///[project]/Downloads/mrpii 2/node_modules/open/index.js","turbopack:///[project]/Downloads/mrpii 2/node_modules/is-wsl/index.js","turbopack:///[project]/Downloads/mrpii 2/node_modules/is-docker/index.js","turbopack:///[project]/Downloads/mrpii 2/node_modules/is-inside-container/index.js","turbopack:///[project]/Downloads/mrpii 2/node_modules/wsl-utils/index.js","turbopack:///[project]/Downloads/mrpii 2/node_modules/define-lazy-prop/index.js","turbopack:///[project]/Downloads/mrpii 2/node_modules/default-browser-id/index.js","turbopack:///[project]/Downloads/mrpii 2/node_modules/run-applescript/index.js","turbopack:///[project]/Downloads/mrpii 2/node_modules/bundle-name/index.js","turbopack:///[project]/Downloads/mrpii 2/node_modules/default-browser/windows.js","turbopack:///[project]/Downloads/mrpii 2/node_modules/default-browser/index.js"],"sourcesContent":["import process from 'node:process';\nimport {Buffer} from 'node:buffer';\nimport path from 'node:path';\nimport {fileURLToPath} from 'node:url';\nimport {promisify} from 'node:util';\nimport childProcess from 'node:child_process';\nimport fs, {constants as fsConstants} from 'node:fs/promises';\nimport {isWsl, powerShellPath} from 'wsl-utils';\nimport defineLazyProperty from 'define-lazy-prop';\nimport defaultBrowser from 'default-browser';\nimport isInsideContainer from 'is-inside-container';\n\nconst execFile = promisify(childProcess.execFile);\n\n// Path to included `xdg-open`.\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\nconst localXdgOpenPath = path.join(__dirname, 'xdg-open');\n\nconst {platform, arch} = process;\n\n/**\nGet the default browser name in Windows from WSL.\n\n@returns {Promise<string>} Browser name.\n*/\nasync function getWindowsDefaultBrowserFromWsl() {\n\tconst powershellPath = await powerShellPath();\n\tconst rawCommand = String.raw`(Get-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\Shell\\Associations\\UrlAssociations\\http\\UserChoice\").ProgId`;\n\tconst encodedCommand = Buffer.from(rawCommand, 'utf16le').toString('base64');\n\n\tconst {stdout} = await execFile(\n\t\tpowershellPath,\n\t\t[\n\t\t\t'-NoProfile',\n\t\t\t'-NonInteractive',\n\t\t\t'-ExecutionPolicy',\n\t\t\t'Bypass',\n\t\t\t'-EncodedCommand',\n\t\t\tencodedCommand,\n\t\t],\n\t\t{encoding: 'utf8'},\n\t);\n\n\tconst progId = stdout.trim();\n\n\t// Map ProgId to browser IDs\n\tconst browserMap = {\n\t\tChromeHTML: 'com.google.chrome',\n\t\tBraveHTML: 'com.brave.Browser',\n\t\tMSEdgeHTM: 'com.microsoft.edge',\n\t\tFirefoxURL: 'org.mozilla.firefox',\n\t};\n\n\treturn browserMap[progId] ? {id: browserMap[progId]} : {};\n}\n\nconst pTryEach = async (array, mapper) => {\n\tlet latestError;\n\n\tfor (const item of array) {\n\t\ttry {\n\t\t\treturn await mapper(item); // eslint-disable-line no-await-in-loop\n\t\t} catch (error) {\n\t\t\tlatestError = error;\n\t\t}\n\t}\n\n\tthrow latestError;\n};\n\n// eslint-disable-next-line complexity\nconst baseOpen = async options => {\n\toptions = {\n\t\twait: false,\n\t\tbackground: false,\n\t\tnewInstance: false,\n\t\tallowNonzeroExitCode: false,\n\t\t...options,\n\t};\n\n\tif (Array.isArray(options.app)) {\n\t\treturn pTryEach(options.app, singleApp => baseOpen({\n\t\t\t...options,\n\t\t\tapp: singleApp,\n\t\t}));\n\t}\n\n\tlet {name: app, arguments: appArguments = []} = options.app ?? {};\n\tappArguments = [...appArguments];\n\n\tif (Array.isArray(app)) {\n\t\treturn pTryEach(app, appName => baseOpen({\n\t\t\t...options,\n\t\t\tapp: {\n\t\t\t\tname: appName,\n\t\t\t\targuments: appArguments,\n\t\t\t},\n\t\t}));\n\t}\n\n\tif (app === 'browser' || app === 'browserPrivate') {\n\t\t// IDs from default-browser for macOS and windows are the same\n\t\tconst ids = {\n\t\t\t'com.google.chrome': 'chrome',\n\t\t\t'google-chrome.desktop': 'chrome',\n\t\t\t'com.brave.Browser': 'brave',\n\t\t\t'org.mozilla.firefox': 'firefox',\n\t\t\t'firefox.desktop': 'firefox',\n\t\t\t'com.microsoft.msedge': 'edge',\n\t\t\t'com.microsoft.edge': 'edge',\n\t\t\t'com.microsoft.edgemac': 'edge',\n\t\t\t'microsoft-edge.desktop': 'edge',\n\t\t};\n\n\t\t// Incognito flags for each browser in `apps`.\n\t\tconst flags = {\n\t\t\tchrome: '--incognito',\n\t\t\tbrave: '--incognito',\n\t\t\tfirefox: '--private-window',\n\t\t\tedge: '--inPrivate',\n\t\t};\n\n\t\tconst browser = isWsl ? await getWindowsDefaultBrowserFromWsl() : await defaultBrowser();\n\t\tif (browser.id in ids) {\n\t\t\tconst browserName = ids[browser.id];\n\n\t\t\tif (app === 'browserPrivate') {\n\t\t\t\tappArguments.push(flags[browserName]);\n\t\t\t}\n\n\t\t\treturn baseOpen({\n\t\t\t\t...options,\n\t\t\t\tapp: {\n\t\t\t\t\tname: apps[browserName],\n\t\t\t\t\targuments: appArguments,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tthrow new Error(`${browser.name} is not supported as a default browser`);\n\t}\n\n\tlet command;\n\tconst cliArguments = [];\n\tconst childProcessOptions = {};\n\n\tif (platform === 'darwin') {\n\t\tcommand = 'open';\n\n\t\tif (options.wait) {\n\t\t\tcliArguments.push('--wait-apps');\n\t\t}\n\n\t\tif (options.background) {\n\t\t\tcliArguments.push('--background');\n\t\t}\n\n\t\tif (options.newInstance) {\n\t\t\tcliArguments.push('--new');\n\t\t}\n\n\t\tif (app) {\n\t\t\tcliArguments.push('-a', app);\n\t\t}\n\t} else if (platform === 'win32' || (isWsl && !isInsideContainer() && !app)) {\n\t\tcommand = await powerShellPath();\n\n\t\tcliArguments.push(\n\t\t\t'-NoProfile',\n\t\t\t'-NonInteractive',\n\t\t\t'-ExecutionPolicy',\n\t\t\t'Bypass',\n\t\t\t'-EncodedCommand',\n\t\t);\n\n\t\tif (!isWsl) {\n\t\t\tchildProcessOptions.windowsVerbatimArguments = true;\n\t\t}\n\n\t\tconst encodedArguments = ['Start'];\n\n\t\tif (options.wait) {\n\t\t\tencodedArguments.push('-Wait');\n\t\t}\n\n\t\tif (app) {\n\t\t\t// Double quote with double quotes to ensure the inner quotes are passed through.\n\t\t\t// Inner quotes are delimited for PowerShell interpretation with backticks.\n\t\t\tencodedArguments.push(`\"\\`\"${app}\\`\"\"`);\n\t\t\tif (options.target) {\n\t\t\t\tappArguments.push(options.target);\n\t\t\t}\n\t\t} else if (options.target) {\n\t\t\tencodedArguments.push(`\"${options.target}\"`);\n\t\t}\n\n\t\tif (appArguments.length > 0) {\n\t\t\tappArguments = appArguments.map(argument => `\"\\`\"${argument}\\`\"\"`);\n\t\t\tencodedArguments.push('-ArgumentList', appArguments.join(','));\n\t\t}\n\n\t\t// Using Base64-encoded command, accepted by PowerShell, to allow special characters.\n\t\toptions.target = Buffer.from(encodedArguments.join(' '), 'utf16le').toString('base64');\n\t} else {\n\t\tif (app) {\n\t\t\tcommand = app;\n\t\t} else {\n\t\t\t// When bundled by Webpack, there's no actual package file path and no local `xdg-open`.\n\t\t\tconst isBundled = !__dirname || __dirname === '/';\n\n\t\t\t// Check if local `xdg-open` exists and is executable.\n\t\t\tlet exeLocalXdgOpen = false;\n\t\t\ttry {\n\t\t\t\tawait fs.access(localXdgOpenPath, fsConstants.X_OK);\n\t\t\t\texeLocalXdgOpen = true;\n\t\t\t} catch {}\n\n\t\t\tconst useSystemXdgOpen = process.versions.electron\n\t\t\t\t?? (platform === 'android' || isBundled || !exeLocalXdgOpen);\n\t\t\tcommand = useSystemXdgOpen ? 'xdg-open' : localXdgOpenPath;\n\t\t}\n\n\t\tif (appArguments.length > 0) {\n\t\t\tcliArguments.push(...appArguments);\n\t\t}\n\n\t\tif (!options.wait) {\n\t\t\t// `xdg-open` will block the process unless stdio is ignored\n\t\t\t// and it's detached from the parent even if it's unref'd.\n\t\t\tchildProcessOptions.stdio = 'ignore';\n\t\t\tchildProcessOptions.detached = true;\n\t\t}\n\t}\n\n\tif (platform === 'darwin' && appArguments.length > 0) {\n\t\tcliArguments.push('--args', ...appArguments);\n\t}\n\n\t// This has to come after `--args`.\n\tif (options.target) {\n\t\tcliArguments.push(options.target);\n\t}\n\n\tconst subprocess = childProcess.spawn(command, cliArguments, childProcessOptions);\n\n\tif (options.wait) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsubprocess.once('error', reject);\n\n\t\t\tsubprocess.once('close', exitCode => {\n\t\t\t\tif (!options.allowNonzeroExitCode && exitCode > 0) {\n\t\t\t\t\treject(new Error(`Exited with code ${exitCode}`));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresolve(subprocess);\n\t\t\t});\n\t\t});\n\t}\n\n\tsubprocess.unref();\n\n\treturn subprocess;\n};\n\nconst open = (target, options) => {\n\tif (typeof target !== 'string') {\n\t\tthrow new TypeError('Expected a `target`');\n\t}\n\n\treturn baseOpen({\n\t\t...options,\n\t\ttarget,\n\t});\n};\n\nexport const openApp = (name, options) => {\n\tif (typeof name !== 'string' && !Array.isArray(name)) {\n\t\tthrow new TypeError('Expected a valid `name`');\n\t}\n\n\tconst {arguments: appArguments = []} = options ?? {};\n\tif (appArguments !== undefined && appArguments !== null && !Array.isArray(appArguments)) {\n\t\tthrow new TypeError('Expected `appArguments` as Array type');\n\t}\n\n\treturn baseOpen({\n\t\t...options,\n\t\tapp: {\n\t\t\tname,\n\t\t\targuments: appArguments,\n\t\t},\n\t});\n};\n\nfunction detectArchBinary(binary) {\n\tif (typeof binary === 'string' || Array.isArray(binary)) {\n\t\treturn binary;\n\t}\n\n\tconst {[arch]: archBinary} = binary;\n\n\tif (!archBinary) {\n\t\tthrow new Error(`${arch} is not supported`);\n\t}\n\n\treturn archBinary;\n}\n\nfunction detectPlatformBinary({[platform]: platformBinary}, {wsl}) {\n\tif (wsl && isWsl) {\n\t\treturn detectArchBinary(wsl);\n\t}\n\n\tif (!platformBinary) {\n\t\tthrow new Error(`${platform} is not supported`);\n\t}\n\n\treturn detectArchBinary(platformBinary);\n}\n\nexport const apps = {};\n\ndefineLazyProperty(apps, 'chrome', () => detectPlatformBinary({\n\tdarwin: 'google chrome',\n\twin32: 'chrome',\n\tlinux: ['google-chrome', 'google-chrome-stable', 'chromium'],\n}, {\n\twsl: {\n\t\tia32: '/mnt/c/Program Files (x86)/Google/Chrome/Application/chrome.exe',\n\t\tx64: ['/mnt/c/Program Files/Google/Chrome/Application/chrome.exe', '/mnt/c/Program Files (x86)/Google/Chrome/Application/chrome.exe'],\n\t},\n}));\n\ndefineLazyProperty(apps, 'brave', () => detectPlatformBinary({\n\tdarwin: 'brave browser',\n\twin32: 'brave',\n\tlinux: ['brave-browser', 'brave'],\n}, {\n\twsl: {\n\t\tia32: '/mnt/c/Program Files (x86)/BraveSoftware/Brave-Browser/Application/brave.exe',\n\t\tx64: ['/mnt/c/Program Files/BraveSoftware/Brave-Browser/Application/brave.exe', '/mnt/c/Program Files (x86)/BraveSoftware/Brave-Browser/Application/brave.exe'],\n\t},\n}));\n\ndefineLazyProperty(apps, 'firefox', () => detectPlatformBinary({\n\tdarwin: 'firefox',\n\twin32: String.raw`C:\\Program Files\\Mozilla Firefox\\firefox.exe`,\n\tlinux: 'firefox',\n}, {\n\twsl: '/mnt/c/Program Files/Mozilla Firefox/firefox.exe',\n}));\n\ndefineLazyProperty(apps, 'edge', () => detectPlatformBinary({\n\tdarwin: 'microsoft edge',\n\twin32: 'msedge',\n\tlinux: ['microsoft-edge', 'microsoft-edge-dev'],\n}, {\n\twsl: '/mnt/c/Program Files (x86)/Microsoft/Edge/Application/msedge.exe',\n}));\n\ndefineLazyProperty(apps, 'browser', () => 'browser');\n\ndefineLazyProperty(apps, 'browserPrivate', () => 'browserPrivate');\n\nexport default open;\n","import process from 'node:process';\nimport os from 'node:os';\nimport fs from 'node:fs';\nimport isInsideContainer from 'is-inside-container';\n\nconst isWsl = () => {\n\tif (process.platform !== 'linux') {\n\t\treturn false;\n\t}\n\n\tif (os.release().toLowerCase().includes('microsoft')) {\n\t\tif (isInsideContainer()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\ttry {\n\t\treturn fs.readFileSync('/proc/version', 'utf8').toLowerCase().includes('microsoft')\n\t\t\t? !isInsideContainer() : false;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport default process.env.__IS_WSL_TEST__ ? isWsl : isWsl();\n","import fs from 'node:fs';\n\nlet isDockerCached;\n\nfunction hasDockerEnv() {\n\ttry {\n\t\tfs.statSync('/.dockerenv');\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n}\n\nfunction hasDockerCGroup() {\n\ttry {\n\t\treturn fs.readFileSync('/proc/self/cgroup', 'utf8').includes('docker');\n\t} catch {\n\t\treturn false;\n\t}\n}\n\nexport default function isDocker() {\n\t// TODO: Use `??=` when targeting Node.js 16.\n\tif (isDockerCached === undefined) {\n\t\tisDockerCached = hasDockerEnv() || hasDockerCGroup();\n\t}\n\n\treturn isDockerCached;\n}\n","import fs from 'node:fs';\nimport isDocker from 'is-docker';\n\nlet cachedResult;\n\n// Podman detection\nconst hasContainerEnv = () => {\n\ttry {\n\t\tfs.statSync('/run/.containerenv');\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport default function isInsideContainer() {\n\t// TODO: Use `??=` when targeting Node.js 16.\n\tif (cachedResult === undefined) {\n\t\tcachedResult = hasContainerEnv() || isDocker();\n\t}\n\n\treturn cachedResult;\n}\n","import process from 'node:process';\nimport fs, {constants as fsConstants} from 'node:fs/promises';\nimport isWsl from 'is-wsl';\n\nexport const wslDrivesMountPoint = (() => {\n\t// Default value for \"root\" param\n\t// according to https://docs.microsoft.com/en-us/windows/wsl/wsl-config\n\tconst defaultMountPoint = '/mnt/';\n\n\tlet mountPoint;\n\n\treturn async function () {\n\t\tif (mountPoint) {\n\t\t\t// Return memoized mount point value\n\t\t\treturn mountPoint;\n\t\t}\n\n\t\tconst configFilePath = '/etc/wsl.conf';\n\n\t\tlet isConfigFileExists = false;\n\t\ttry {\n\t\t\tawait fs.access(configFilePath, fsConstants.F_OK);\n\t\t\tisConfigFileExists = true;\n\t\t} catch {}\n\n\t\tif (!isConfigFileExists) {\n\t\t\treturn defaultMountPoint;\n\t\t}\n\n\t\tconst configContent = await fs.readFile(configFilePath, {encoding: 'utf8'});\n\t\tconst configMountPoint = /(?<!#.*)root\\s*=\\s*(?<mountPoint>.*)/g.exec(configContent);\n\n\t\tif (!configMountPoint) {\n\t\t\treturn defaultMountPoint;\n\t\t}\n\n\t\tmountPoint = configMountPoint.groups.mountPoint.trim();\n\t\tmountPoint = mountPoint.endsWith('/') ? mountPoint : `${mountPoint}/`;\n\n\t\treturn mountPoint;\n\t};\n})();\n\nexport const powerShellPathFromWsl = async () => {\n\tconst mountPoint = await wslDrivesMountPoint();\n\treturn `${mountPoint}c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe`;\n};\n\nexport const powerShellPath = async () => {\n\tif (isWsl) {\n\t\treturn powerShellPathFromWsl();\n\t}\n\n\treturn `${process.env.SYSTEMROOT || process.env.windir || String.raw`C:\\Windows`}\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe`;\n};\n\nexport {default as isWsl} from 'is-wsl';\n","export default function defineLazyProperty(object, propertyName, valueGetter) {\n\tconst define = value => Object.defineProperty(object, propertyName, {value, enumerable: true, writable: true});\n\n\tObject.defineProperty(object, propertyName, {\n\t\tconfigurable: true,\n\t\tenumerable: true,\n\t\tget() {\n\t\t\tconst result = valueGetter();\n\t\t\tdefine(result);\n\t\t\treturn result;\n\t\t},\n\t\tset(value) {\n\t\t\tdefine(value);\n\t\t}\n\t});\n\n\treturn object;\n}\n","import {promisify} from 'node:util';\nimport process from 'node:process';\nimport {execFile} from 'node:child_process';\n\nconst execFileAsync = promisify(execFile);\n\nexport default async function defaultBrowserId() {\n\tif (process.platform !== 'darwin') {\n\t\tthrow new Error('macOS only');\n\t}\n\n\tconst {stdout} = await execFileAsync('defaults', ['read', 'com.apple.LaunchServices/com.apple.launchservices.secure', 'LSHandlers']);\n\n\t// `(?!-)` is to prevent matching `LSHandlerRoleAll = \"-\";`.\n\tconst match = /LSHandlerRoleAll = \"(?!-)(?<id>[^\"]+?)\";\\s+?LSHandlerURLScheme = (?:http|https);/.exec(stdout);\n\n\treturn match?.groups.id ?? 'com.apple.Safari';\n}\n","import process from 'node:process';\nimport {promisify} from 'node:util';\nimport {execFile, execFileSync} from 'node:child_process';\n\nconst execFileAsync = promisify(execFile);\n\nexport async function runAppleScript(script, {humanReadableOutput = true, signal} = {}) {\n\tif (process.platform !== 'darwin') {\n\t\tthrow new Error('macOS only');\n\t}\n\n\tconst outputArguments = humanReadableOutput ? [] : ['-ss'];\n\n\tconst execOptions = {};\n\tif (signal) {\n\t\texecOptions.signal = signal;\n\t}\n\n\tconst {stdout} = await execFileAsync('osascript', ['-e', script, outputArguments], execOptions);\n\treturn stdout.trim();\n}\n\nexport function runAppleScriptSync(script, {humanReadableOutput = true} = {}) {\n\tif (process.platform !== 'darwin') {\n\t\tthrow new Error('macOS only');\n\t}\n\n\tconst outputArguments = humanReadableOutput ? [] : ['-ss'];\n\n\tconst stdout = execFileSync('osascript', ['-e', script, ...outputArguments], {\n\t\tencoding: 'utf8',\n\t\tstdio: ['ignore', 'pipe', 'ignore'],\n\t\ttimeout: 500,\n\t});\n\n\treturn stdout.trim();\n}\n","import {runAppleScript} from 'run-applescript';\n\nexport default async function bundleName(bundleId) {\n\treturn runAppleScript(`tell application \"Finder\" to set app_path to application file id \"${bundleId}\" as string\\ntell application \"System Events\" to get value of property list item \"CFBundleName\" of property list file (app_path & \":Contents:Info.plist\")`);\n}\n","import {promisify} from 'node:util';\nimport {execFile} from 'node:child_process';\n\nconst execFileAsync = promisify(execFile);\n\n// Windows doesn't have browser IDs in the same way macOS/Linux does so we give fake\n// ones that look real and match the macOS/Linux versions for cross-platform apps.\nconst windowsBrowserProgIds = {\n\tAppXq0fevzme2pys62n3e0fbqa7peapykr8v: {name: 'Edge', id: 'com.microsoft.edge.old'},\n\tMSEdgeDHTML: {name: 'Edge', id: 'com.microsoft.edge'}, // On macOS, it's \"com.microsoft.edgemac\"\n\tMSEdgeHTM: {name: 'Edge', id: 'com.microsoft.edge'}, // Newer Edge/Win10 releases\n\t'IE.HTTP': {name: 'Internet Explorer', id: 'com.microsoft.ie'},\n\tFirefoxURL: {name: 'Firefox', id: 'org.mozilla.firefox'},\n\tChromeHTML: {name: 'Chrome', id: 'com.google.chrome'},\n\tBraveHTML: {name: 'Brave', id: 'com.brave.Browser'},\n\tBraveBHTML: {name: 'Brave Beta', id: 'com.brave.Browser.beta'},\n\tBraveSSHTM: {name: 'Brave Nightly', id: 'com.brave.Browser.nightly'},\n};\n\nexport class UnknownBrowserError extends Error {}\n\nexport default async function defaultBrowser(_execFileAsync = execFileAsync) {\n\tconst {stdout} = await _execFileAsync('reg', [\n\t\t'QUERY',\n\t\t' HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\Shell\\\\Associations\\\\UrlAssociations\\\\http\\\\UserChoice',\n\t\t'/v',\n\t\t'ProgId',\n\t]);\n\n\tconst match = /ProgId\\s*REG_SZ\\s*(?<id>\\S+)/.exec(stdout);\n\tif (!match) {\n\t\tthrow new UnknownBrowserError(`Cannot find Windows browser in stdout: ${JSON.stringify(stdout)}`);\n\t}\n\n\tconst {id} = match.groups;\n\n\tconst browser = windowsBrowserProgIds[id];\n\tif (!browser) {\n\t\tthrow new UnknownBrowserError(`Unknown browser ID: ${id}`);\n\t}\n\n\treturn browser;\n}\n","import {promisify} from 'node:util';\nimport process from 'node:process';\nimport {execFile} from 'node:child_process';\nimport defaultBrowserId from 'default-browser-id';\nimport bundleName from 'bundle-name';\nimport windows from './windows.js';\n\nconst execFileAsync = promisify(execFile);\n\n// Inlined: https://github.com/sindresorhus/titleize/blob/main/index.js\nconst titleize = string => string.toLowerCase().replaceAll(/(?:^|\\s|-)\\S/g, x => x.toUpperCase());\n\nexport default async function defaultBrowser() {\n\tif (process.platform === 'darwin') {\n\t\tconst id = await defaultBrowserId();\n\t\tconst name = await bundleName(id);\n\t\treturn {name, id};\n\t}\n\n\tif (process.platform === 'linux') {\n\t\tconst {stdout} = await execFileAsync('xdg-mime', ['query', 'default', 'x-scheme-handler/http']);\n\t\tconst id = stdout.trim();\n\t\tconst name = titleize(id.replace(/.desktop$/, '').replace('-', ' '));\n\t\treturn {name, id};\n\t}\n\n\tif (process.platform === 'win32') {\n\t\treturn windows();\n\t}\n\n\tthrow new Error('Only macOS, Linux, and Windows are supported');\n}\n"],"names":[],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10]}